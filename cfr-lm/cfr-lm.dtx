% \iffalse meta-comment
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% cfr-lm.dtx
% Additions and changes Copyright (C) 2008-2025 Clea F. Rees.
% Code from skeleton.dtx Copyright (C) 2015-2024 Scott Pakin (see below).
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3c
% of this license or (at your option) any later version.
% The latest version of this license is in
%   https://www.latex-project.org/lppl.txt
% and version 1.3c or later is part of all distributions of LaTeX
% version 2008-05-04 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Clea F. Rees.
%
% This work consists of all files listed in manifest.txt.
%
% The file cfr-lm.dtx is a derived work under the terms of the
% LPPL. It is based on version 2.4 of skeleton.dtx which is part of 
% dtxtut by Scott Pakin. A copy of dtxtut, including the 
% unmodified version of skeleton.dtx is available from
% https://www.ctan.org/pkg/dtxtut and released under the LPPL.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \fi
%
% \iffalse
%<*driver>
\RequirePackage{svn-prov}
% ref. ateb Max Chernoff: https://tex.stackexchange.com/a/723294/
% ^^A \def\MakePrivateLetters{\makeatletter\ExplSyntaxOn\endlinechar13}
% ^^A \def\MyMakePrivateLetters{\makeatletter\ExplSyntaxOn\endlinechar13}
\ExplSyntaxOn
% ^^A sylwad yannisl: https://tex.stackexchange.com/questions/723293/how-can-i-get-automatic-code-indexing-of-expl3-in-ltxdoc/723294#comment1799661_723294
% ^^A \ExplSyntaxOn \cs_gset:Npn \MakePrivateLetters { \char_set_catcode_letter:N \@ \char_set_catcode_letter:N _ \char_set_catcode_letter:N \: } \ExplSyntaxOff`
\cs_new_nopar:Npn \MyMakePrivateLetters
{
  \char_set_catcode_letter:N \@
  \char_set_catcode_letter:N _
  \char_set_catcode_letter:N \:
}
\ExplSyntaxOff
\ProvidesFileSVN{$Id: cfr-lm.dtx 10792 2025-02-11 04:16:04Z cfrees $}[v1.8 \revinfo][\filebase DTX: Latin Modern for 8-bit engines]
\DefineFileInfoSVN[cfr-lm]
\documentclass[10pt,british]{ltxdoc}
% l3doc loads fancyvrb
% fancyvrb overwrites svn-prov's macros without warning
% restore \fileversion \filerev in case we're using l3doc
\GetFileInfoSVN{cfr-lm}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
% \OnlyDescription
\DoNotIndex{\verb,\ProvidesPackageSVN,\NeedsTeXFormat,\ProcessKeyOptions,\revinfo,\filebase,\filename,\filedate,\RequirePackage,\usepackage,\DefineFileInfoSVN,\GetFileInfoSVN,\ProvidesPackageSVN,\documentclass,\MakeAutoQuote,\parindent,\par,\smallskip,\setlength,\bigskip,\maketitle,\title,\author,\date,\ExplSyntaxOn,\ExplSyntaxOff}
\usepackage{babel}
\pdfmapfile{-clm.map}	% not necessary for installed package
\pdfmapfile{+clm.map}	% not necessary for installed package
\usepackage[rm={lining,proportional},sf={lining,proportional},tt={mono,lining,tabular}]{cfr-lm}
%^^A *** PAID Â TRIO DEFNYDDIO LTMARKS YN LLE EXTRAMARKS MEWN UNRHYW DOGFEN A DDEFNYDDIO HI MULTICOLS (YN CYNNWYS LTXDOC AC UNRHYW UN Â MYNEGAI YN ÔL BOB DEBYG!!! *** 
\usepackage{fancyhdr,extramarks}
\usepackage[plain]{fancyref}
\usepackage{fixfoot}
\usepackage{array,tabularx}
\usepackage{longtable}
\usepackage{enumitem}
\usepackage[referable]{threeparttablex}
\makeatletter
\def\TPT@measurement{% ateb David Carlisle: https://tex.stackexchange.com/a/370691/
  \ifdim\wd\@tempboxb<\TPTminimum
    \hsize \TPTminimum
  \else
    \hsize\wd\@tempboxb
  \fi
  \xdef\TPT@hsize{\hsize\the\hsize \noexpand\@parboxrestore}\TPT@hsize
  \ifx\TPT@docapt\@undefined\else
    \TPT@docapt \vskip.2\baselineskip
  \fi \par
  \dimen@\dp\@tempboxb % new
  \box\@tempboxb
  \ifvmode \prevdepth\dimen@ \fi% was \z@ not \dimen@
}
\renewlist{tablenotes}{enumerate}{1}
\setlist[tablenotes]{label=\tnote{\alph*},ref=\alph*,itemsep=\z@,topsep=\z@skip,partopsep=\z@skip,parsep=\z@,itemindent=\z@,labelindent=\tabcolsep,labelsep=.2em,leftmargin=*,align=left,before={\unskip\medskip\footnotesize}}
\makeatother
\usepackage{booktabs}
\usepackage{multirow}
\usepackage{xcolor}
\usepackage{xurl}
\urlstyle{sf}
\usepackage{microtype}
\usepackage[a4paper,headheight=14pt,marginparwidth=45mm,hmarginratio=4:1,vscale=.8,hscale=.7,verbose]{geometry}	% use 14pt for 11pt text, 15pt for 12pt text
\usepackage{csquotes}
\MakeAutoQuote{‘}{’}
\MakeAutoQuote*{“}{”}
\usepackage{caption}
\DeclareCaptionFont{lf}{\sffamily\plstyle}
\captionsetup[table]{labelfont=lf}
% sicrhau hyperindex=false: llwytho CYN bookmark
\usepackage{hypdoc}% ateb Ulrike Fischer: https://tex.stackexchange.com/a/695555/
\usepackage{bookmark}
\hypersetup{%
  colorlinks=true,
  citecolor={moss},
  extension=pdf,
  linkcolor={strawberry},
  linktocpage=true,
  pdfcreator={TeX},
  pdfproducer={pdfeTeX},
  urlcolor={blueberry}%
}
\NewDocElement[%
  idxtype=opt.,
  idxgroup=options,
  printtype=\textit{opt.},
]{Opt}{option}
\NewDocElement[%
  idxtype=alt.,
  idxgroup=alternates,
  printtype=\textit{alt.},
]{Alt}{alternate}
\NewDocElement[%
  idxtype=lig.,
  idxgroup=ligatures,
  printtype=\textit{lig.},
]{Lig}{ligature}
\NewDocElement[%
  idxtype=sw.,
  idxgroup=swashes,
  printtype=\textit{sw.},
]{Sw}{swash}
\NewDocElement[%
  idxtype=pkg.,
  idxgroup=,
  printtype=\textit{pkg.},
]{Pkg}{package}
\NewDocElement[%
  idxtype=fd.,
  idxgroup=fds,
  printtype=\textit{fd.},
]{Fd}{fdfile}
\NewDocElement[%
  idxtype=drv.,
  idxgroup=drivers,
  printtype=\textit{drv.},
]{Drv}{driver}
\NewDocElement[%
  idxtype=map,
  idxgroup=map files,
  printtype=\textit{map},
]{Map}{mapfile}
\NewDocElement[%
  idxtype=etx,
  idxgroup=font encodings,
  printtype=\textit{etx},
]{Etx}{encoding}
\NewDocumentCommand \val { m }
{%
  {\ttfamily =\,\meta{#1}}%
}
\ExplSyntaxOn
\NewDocumentCommand \vals { m }
{
  {
    \ttfamily = \, 
    \clist_use:nn { #1 } { \textbar }
  }
} 
\keys_define:nn { clm / doc }
{
  unknown .code:n = {
    \cs_if_free:cT { \l_keys_key_str }
    {
      \tl_gset:cn { \l_keys_key_str } { #1 }
    }
  },
}
\NewDocumentCommand \clmdocset { +m }
{
  \keys_set:nn { clm / doc } { #1 }
}
\ExplSyntaxOff
\clmdocset{%
  bug={\href{https://codeberg.org/cfr/nfssext/issues}{\textsc{bugtracker}}},
  codeberg={\href{https://codeberg.org/cfr/nfssext}{\textsc{codeberg}}},
  github={\href{https://github.com/cfr42/nfssext}{\textsc{github}}},
  ctan={\href{https://ctan.org/}{\textsc{ctan}}},
}
% \usepackage{cleveref}
\newcommand*{\gust}{\textsc{Gust}}
\newcommand*{\lpack}[1]{\textsf{#1}}
\newcommand*{\fgroup}[1]{\textsf{#1}}
\newcommand*{\fname}[1]{\textsf{#1}}
\newcommand*{\file}[1]{\texttt{#1}}
\title{\filebase}
\author{Clea F. Rees\thanks{%
    Bug tracker:
    \href{https://codeberg.org/cfr/nfssext/issues}{\url{codeberg.org/cfr/nfssext/issues}}
    \textbar{} Code:
    \href{https://codeberg.org/cfr/nfssext}{\url{codeberg.org/cfr/nfssext}}
    \textbar{} Mirror:
    \href{https://github.com/cfr42/nfssext}{\url{github.com/cfr42/nfssext}}% 
}}
%^^A \date{\fileversion~\filetoday}
\date{\fileversion~\filedate}
\pagestyle{fancy}
\fancyhf{}
% ^^A \fancyhf[rh]{\itshape\filetoday}
% ^^A \fancyhf[rh]{\itshape\fileversion}
% ^^A \fancyhf[ch]{\itshape Support for Latin Modern}
% ^^A\fancyhf[lf]{\itshape\fileversion}
% ^^A \fancyhf[cf]{\itshape--- \thepage~/~\lastpage{} ---}
\ExplSyntaxOn
\tl_new:N \l__cfrlm_doc_ffont_tl
\tl_new:N \l__cfrlm_doc_hfont_tl
\tl_set:Nn \l__cfrlm_doc_ffont_tl {\itshape\plstyle}
\tl_set:Nn \l__cfrlm_doc_hfont_tl {\itshape\plstyle}
% ref. fancyhdr (or see tc3 ref'd there?)
\renewcommand \sectionmark[1]{\markboth{\thesection{} ~ #1}{}}
\renewcommand \subsectionmark[1]{\markright{\arabic{subsection} ~ #1}}
\fancyhf[lh]
{
  \bool_set_false:N \l_tmpa_bool
  \l__cfrlm_doc_hfont_tl
  \hbox_overlap_right:n %^^A \rlap
  {
    \nouppercase
    {
      \firstleftmark
    }
  }
  \skip_horizontal:n { \g__cfrlm_doc_offset_dim }
  \nouppercase
  {
    \tl_if_blank:eF { \mark_use_first:nn { page } { 2e-right } }
    {
      \__cfrlm_doc_lreq:
    }
  }
}
\cs_new_nopar:Nn \__cfrlm_doc_lreq:
{ % ^^A david carlisle: https://chat.stackexchange.com/transcript/message/66321842#66321842
  % ^^A neu Ulrike Fischer: https://chat.stackexchange.com/transcript/message/66321730#66321730
  % ^^A -> \protected@edef\cfrlm@tmpa{\firstleftmark}\protected@edef\cfrlm@tmpb{\firstrightmark}\if_tl_eq:NNTF \cfrlm@tmpa \cfrlm@tmpb {} { \firstrightmark }
  \group_begin:
    \let\protect\noexpand
    \tl_if_eq:eeTF { \firstleftmark } { \firstrightmark } { \group_end: } { \group_end: \firstrightmark }
  % ^^A neu ... { } { \let\protect\relax \firstrightmark } \group_end:
}
\fancyhf[rh]
{
  \l__cfrlm_doc_hfont_tl
  \nouppercase
  {
    \lastleftmark
  }
}
\fancyhf[rf]
{
  \l__cfrlm_doc_hfont_tl
  \nouppercase
  {
    \thepage{} ~ / ~ \lastpage{}
  }
}
\fancyhf[lf]
{
  \l__cfrlm_doc_ffont_tl
  \hbox_overlap_right:n %^^A \rlap
  {
    \filebase
  }
  \skip_horizontal:n { \g__cfrlm_doc_offset_dim }
  \nouppercase
  {
    \fileversion
  }
}
\dim_new:N \g__cfrlm_doc_offset_dim
\hook_gput_code:nnn { begindocument } {.}
{
  \dim_gset:Nn \g__cfrlm_doc_offset_dim { \marginparwidth + \marginparsep }
  \fancyheadoffset[lh,lf]{ \g__cfrlm_doc_offset_dim }
}
\hook_gput_code:nnn {shipout/lastpage} {.}
{
  \property_record:nn {t:lastpage}{abspage,page,pagenum}
}
\cs_new_protected_nopar:Npn \lastpage 
{
  \property_ref:nn {t:lastpage}{page}
}
\cs_new_eq:NN \OrigMakePrivateLetters \MakePrivateLetters
\ExplSyntaxOff
\definecolor{strawberry}{rgb}{1.000,0.000,0.502}
\definecolor{blueberry}{rgb}{0.000,0.000,1.000}
\definecolor{moss}{rgb}{0.000,0.502,0.251}
\begin{document}
\let\MakePrivateLetters\MyMakePrivateLetters
\DocInput{\filename}
\end{document}
%</driver>
% \fi
%
%
% \changes{v0.9? 2008-10-26}{2008/10/26}{%
%   First public release.}
% \changes{v1.0? 2008-12-22}{2008/12/22}{}
% \changes{v1.1? 2010-05-27}{2010/05/27}{%
%   Update for Latin Modern 2.004.
%   Tweak generation of virtual fonts to improve accent placement by adjusting for peculiarities in \lpack{lm} distribution.}
% \changes{v1.3 2010-05-31}{2010/05/31}{%
%   Now with added documentation\!}
% \changes{v1.3 2010-07-14}{2010/07/14}{%
%   Very minor update to ensure encoding files are unique. 
%   Change map file and \file{manifest.txt} accordingly.}
% \changes{v1.5 2015-02-01}{2015/02/01}{%
%   Correct two typos in \file{.fd} files.
%   Make corresponding changes to typos in source \file{-drv.tex} files. 
%   In most cases, the changes will have no effect.
%   However, in some cases, the errors might have caused inappropriate font substitutions and could cause compilation failures in unusual circumstances.}
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Belated update for (New) NFSS.%
% }
% \changes{\fileversion}{\filedate}{%
%   Try switching to DTX/INS.
%   Use \lpack{l3build}.%
% }
%
% 
% 
% 
% \maketitle\thispagestyle{empty}
% \pdfinfo{%
% 	/Creator		(TeX)
% 	/Producer		(pdfTeX)
% 	/Author			(Clea F.\ Rees)
% 	/Title			(cfr-lm)
% 	/Subject		(TeX)
% 	/Keywords		(TeX,LaTeX,font,fonts,tex,latex,LatinModern,Latin Modern,latinmodern,cfr-lm,lm,LM,osf,OSF,figure,figures,digit,digits,proportional,tabular,lining,oldstyle,Latin,Modern,Clea,Rees)}
% \pdfcatalog{%
% 	/URL				()
% 	/PageMode	/UseOutlines}	
% \setlength{\parindent}{0pt}
% \setlength{\parskip}{0.5em}
% 
% 
% \begin{abstract}
% 	\noindent\lpack{cfr-lm} offers enhanced support for Latin Modern 2.004 in \TeX/\LaTeX{} on 8-bit engines\footnote{%
%   It is not required, does not support and should not be loaded with Unicode engines.
%   Indeed, it was largely written because I wanted to use features easily accessible on Unicode engines while continuing to compile with pdf\TeX{}, which was significantly more reliable at the time and is still considerably faster.%
% }.
% A number of features of the Latin Modern fonts are not easily accessible via the default \TeX/\LaTeX\ support provided in the official distribution.
% This package aims to provide \TeX/\LaTeX\ support for a number of these features including various styles of digits, upright italic and oblique small-caps shapes, and alternative weights and widths.
% It also supports the variable width typewriter, ‘dunhill’ and ‘quotation’ fonts.
% If \lpack{microtype} is loaded, the package ensures the custom settings designed for Computer and Latin Modern are loaded.
% \end{abstract}
% 
% \tableofcontents
% 
% 
% \section{Introduction}
% 
% This document explains how to use the \lpack{cfr-lm} package to access advanced features of the Latin Modern fonts not otherwise supported by the official \lpack{lm} distribution.
% These features include various styles of digits, upright italic and oblique small-caps italic, alternative weights and widths, and Latin Modern Mono Prop (variable width typewriter), Dunhill and Sans Quotation.
% By default, the \LaTeX\ package provided by \path{cfr-lm.sty} uses proportional oldstyle digits and variable width typewriter but this can be changed by passing appropriate options when loading the package.
% The package also supports using e.g.\ different styles of digits within a document so it is possible to use proportional oldstyle digits by default, say, but tabular lining digits within a particular table.
% Finally, a command to access the zeroslash character is provided.
% 
% \changes{v1.3}{2010/05/27}{%
%   Update for version 2.004 of Latin Modern.%
% }
% \lpack{cfr-lm} version 1.3 requires version 2.004 of \textsc{gust}'s Latin Modern fonts, including the support package provided for \TeX.
% The fonts and \TeX\ support are included in many \TeX\ distributions or may be obtained from \url{http://www.gust.org.pl/projects/e-foundry/latin-modern} or your nearest \ctan{} mirror.
% 
% \lpack{cfr-lm} consists of all files listed in \lpack{manifest.txt}\ and these files are released under the \LaTeX\ Project Public Licence as explained in the included licensing notices.
%
% \changes{v1.3}{2010/05/27}{%
%   Improved option handling due almost entirely to Enrico Gregorio.
%   Improved accent placement for faked glyphs thanks in considerable part to Lars Hellström's patience.
%   Ignore all font dimensions in the \textsc{afm} files and take them from the \textsc{tfm}s released with Latin Modern instead.%
% }
% Version 1.3 of the package benefited greatly from feedback provided by Enrico Gregorio, who essentially rewrote the style file using \lpack{keyval} to show me how I ought to be setting the various options up, and Lars Hellström who demonstrated considerable patience in answering my many questions about using \lpack{fontinst} and some peculiarities of the Latin Modern fonts.
% I hope the changes in the production of the virtual fonts will improve accent placement in ‘faked’ glyphs (i.e.\ in the case of characters not included in the \textsc{ec}/\textsc{t1} font encoding which \TeX\ therefore creates by combining glyphs which are included).
% The changes involve ignoring all font dimensions given in the \textsc{afm} files and taking them from the relevant \textsc{tfm} files supplied with Latin Modern instead.
% The exception to this is the value of \verb|acccapheight| which is set to zero in the \textsc{tfm}s.
% The current virtual font setup uses \lpack{fontinst}'s default value in this case.
% 
% \changes{v1.4}{2014/03/04}{%
%   Use family-specific settings for \lpack{microtype}.%
% }
% If you load \lpack{microtype}, version 1.4 and later will automatically figure out the family-specific settings to use.
% This is done using aliases which tell \lpack{microtype} to treat the virtual fonts provided by this package in the same way it treats Latin Modern and Computer Modern Roman.
% See \fref{sec:mt} for details.
% 
% \section{Requirements}\label{sec:require}
% 
% In addition to the usual suspects (\LaTeX\ etc.), the \LaTeX\ support provided by \path{cfr-lm.sty} requires:
% \begin{itemize}
% 	\item \lpack{lm}: Latin Modern version 2.004\footnote{This package should not be used with any other version of Latin Modern due to likely changes to the font metrics, glyph names etc.}
% 	\item \lpack{nfssext-cfr}
% \end{itemize}
% 
% If you wish to compile (as opposed to read) the package documentation, additional, packages are required.
% See \path{cfr-lm.dtx} for details.
%
% If you wish to recreate the font support files from the base `\lpack{lm}` package, the easiest option is to download the source from \codeberg{} or \github{}.
% You can, however, also recreate the font files by hand using the sources included in the \ctan{} archive alone\footnote{%
%   The font definition files will be functionally equivalent to those included in the package, but the spacing in some \cs{DeclareFontFamily} lines will differ because \lpack{fontinst} doesn't write arguments passed to \cs{installfamily} verbatim to the output stream..
%   Other files should be equivalent modulo commented lines.%
% }.
% 
% \section{Limitations}
% 
% Unlike the official \TeX\ support for Latin Modern, \lpack{cfr-lm} supports only the \textsc{ec}/\textsc{t1} and Text Companion (\textsc{ts1}) encodings for text.
% Also unlike the official support, the \textsc{ec}/\textsc{t1} support depends entirely on virtual fonts.
% If virtual fonts have disadvantages, then, whatever those disadvantages may be, \lpack{cfr-lm} will inherit them.
% This does not apply to the \textsc{ts1} encoding or to mathematics, since these rely purely on the support provided by the official distribution so should be identical.
% 
% \LaTeX{} does not recognise the fonts provided by this package, including the \textsc{ts1} encoding but excluding the mathematics, \emph{as} Latin Modern.
% This is problematic because newer kernels treat Computer Modern and Latin Modern differently, but only if they are accessed using the default names.
% This causes at least two complications.

% First, the kernel responds to \lpack{cfr-lm} far more ‘noisily’ than one would like, especially since the noise is entirely unnecessary.
% The warnings occur because \LaTeX{} switches the default bold series from \texttt{bx} to \texttt{b} unless the document fonts are on a list which includes Latin Modern only by the names provided by \lpack{lmodern}.
% As far as I can tell, the ‘noise’ is merely annoying: the actual fonts used and the final output are unaffected, since the kernel tries \texttt{bx} if \texttt{b} is unavailable, though there is presumably some impact on compilation time.
% In any case, the new version of \lpack{nfssext-cfr} now patches the code the kernel executes at the beginning of the \texttt{document} environment by simply adding the appropriate names to the list of Computer and Latin Modern families.
%
% Second, the virtual fonts provided by this package aren't recognised as supporting the \texttt{ts1} encoding, so \lpack{cfr-lm} needs to specify this specifically on newer kernels\footnote{On older kernels, the package continues to load \lpack{textcomp} as it did before.}.
% 
% \section{Font setup}
% 
% As explained above, the fonts use the \textsc{ec}/\textsc{t1} and Text Companion (\textsc{ts1}) encodings.
% The provision for the \textsc{ts1} and mathematics encodings simply calls the support provided by \lpack{lm}.
% The \lpack{cfr-lm} support simply ensures that access is provided automatically when the \textsc{t1}-encoded virtual fonts it provides are active.
% 
% \subsection{Font families}
% 
% \Fref{tab:fonts} list the  font families provided for use in the \textsc{ec}/\textsc{t1} and Text Companion (\textsc{ts1}) encodings.
% \begin{table}
%   \centering
%   \begin{threeparttable}
%     \caption{Font families}\label{tab:fonts}
%     \begin{tabular}{>{\raggedright}p{.2\textwidth}ll>{\raggedright\arraybackslash}l}
%       \toprule
% 	\textbf{LM Names}	&	\textbf{Family}	&	\textbf{Digits/figures}	& \textbf{Notes}\tabularnewline\midrule
% 		\multirow{4}{.2\textwidth}{Latin Modern Roman}%
% 											&	\fgroup{clm}								&	tabular, lining						& similar to \lpack{lm} \verb|rm| default\tabularnewline
% 											&	\fgroup{clm2}							&	proportional, lining				&	\tabularnewline
% 											&	\fgroup{clmj}								&	tabular, oldstyle					&	\tabularnewline
% 											&	\fgroup{clm2j}							&	proportional, oldstyle			&	\lpack{cfr-lm} \verb|rm| default\tabularnewline\midrule
% 		\multirow{4}{.2\textwidth}{Latin Modern Sans}%
% 											&	\fgroup{clms}							&	tabular, lining						&	similar to \lpack{lm} \verb|sf| default\tabularnewline
% 											&	\fgroup{clm2s}							&	proportional, lining				&	\tabularnewline
% 											&	\fgroup{clmjs}							&	tabular, oldstyle					&	\tabularnewline
% 											&	\fgroup{clm2js}						&	proportional, oldstyle			&	\lpack{cfr-lm} \verb|sf| default\tabularnewline\midrule
% 		\multirow{2}{.2\textwidth}{Latin Modern Mono\tnotex{tn:dupes}}%
% 											&	\fgroup{clmt}, \fgroup{clm2t}				&	tabular, lining						&	similar to \lpack{lm} \verb|tt| default\tabularnewline
% 											&	\fgroup{clmjt},	\fgroup{clm2jt}			&	tabular, oldstyle					&	\tabularnewline\midrule
% 		\multirow{4}{.2\textwidth}{Latin Modern Mono Prop\tnotex{tn:monoprop}}%
% 											&	\fgroup{clmv}							&	tabular, lining						&	\tabularnewline
% 											&	\fgroup{clm2v}							&	proportional, lining				&	\tabularnewline
% 											&	\fgroup{clmjv}							&	tabular, oldstyle					&	\tabularnewline
% 											&	\fgroup{clm2jv}						&	proportional, oldstyle			&	\lpack{cfr-lm} \verb|tt| default\tabularnewline\midrule
% 		\multirow{4}{.2\textwidth}{Latin Modern Sans Quotation}	%
% 											&	\fgroup{clmqs}							&	tabular, lining						&	\tabularnewline
% 											&	\fgroup{clm2qs}						&	proportional, lining				&	\tabularnewline
% 											&	\fgroup{clmjqs}							&	tabular, oldstyle					&	\tabularnewline
% 											&	\fgroup{clm2jqs}						&	proportional, oldstyle			&	\tabularnewline\midrule
% 		\multirow{4}{.2\textwidth}{Latin Modern Roman Dunhill}%^^A\multirow{nrows}[bigstruts]{width}[fixup]{text}; or * for {width}
% 											&	\fgroup{clmd}							&	tabular, lining						&	\tabularnewline
% 											&	\fgroup{clm2d}							&	proportional, lining				&	\tabularnewline
% 											&	\fgroup{clmdj}							&	tabular, oldstyle					&	\tabularnewline
% 											&	\fgroup{clm2dj}						&	proportional, oldstyle			&	\tabularnewline
%       \bottomrule
%     \end{tabular}
%     \begin{tablenotes}
%       \item\label{tn:dupes}The duplication in \TeX\ name here is to avoid \TeX\ complaining if commands to use proportional digits are issued while one of these fonts is active and to ensure that it is possible to switch smoothly to these fonts if another font with proportional digits is active.
%       \item\label{tn:monoprop}Despite the apparent contradiction in their name, this is variable-width typewriter.
%     \end{tablenotes}
%   \end{threeparttable}
% \end{table}
% 
% \subsection{Shapes, Weights and Widths}
%
% Shape, eight and width availability is shown in \fref{tab:sww}.
% \begin{table}
%   \centering
%     \caption{Shapes, weights \& widths}\label{tab:sww}
%     \begin{tabular} {l>{\raggedright}p{.1\textwidth}>{\raggedright}p{.1\textwidth}>{\raggedright}p{.25\textwidth}}
%       \toprule
% 		\textbf{family}	&	\textbf{widths}	&	\textbf{weights}	&	 \textbf{shapes}\tabularnewline\midrule
% 		\fgroup{clm}, \fgroup{clm2}, \fgroup{clmj}, \fgroup{clm2j}					&	standard	&	normal				&	upright, oblique,\\italic, upright italic,\\small-caps,\\oblique small-caps\tabularnewline
% 																	&						& bold					&	upright, oblique, italic\tabularnewline
% 																	&						&	demi					&	upright, oblique\tabularnewline\midrule
% 		\fgroup{clms}, \fgroup{clm2s}, \fgroup{clmjs}, \fgroup{clm2js}				&	standard	&	normal				&	upright, oblique\tabularnewline
% 																	&						&	bold					&	upright, oblique\tabularnewline\cmidrule{2-4}
% 																	&	condensed	&	demi					&	upright, oblique\tabularnewline\midrule
% 		\fgroup{clmt}, \fgroup{clm2t}, \fgroup{clmjt}, \fgroup{clm2jt}				&	standard	&	normal				&	upright, oblique,\\italic, small-caps,\\oblique small-caps\tabularnewline
% 																	&						&	bold					&	upright, oblique\tabularnewline
% 																	&						&	light					&	upright, oblique\tabularnewline\cmidrule{2-4}
% 																	&	condensed	&	light					& upright, oblique\tabularnewline\midrule
% 		\fgroup{clmv}, \fgroup{clm2v}, \fgroup{clmjv}, \fgroup{clm2jv}				&	standard	&	normal				&	upright, oblique\tabularnewline
% 																	&						&	bold					&	upright, oblique\tabularnewline
% 																	&						&	light					&	upright, oblique\tabularnewline\midrule
% 		\fgroup{clmqs}, \fgroup{clm2qs}, \fgroup{clmjqs}, \fgroup{clm2jqs}	&						&	normal				&	upright, oblique\tabularnewline
% 																	&						&	bold					&	upright, oblique\tabularnewline\midrule
% 		\fgroup{clmd}, \fgroup{clm2d}, \fgroup{clmdj}, \fgroup{clm2dj}			&	standard	&	normal				&	upright, oblique\tabularnewline
% 																	&						&	bold					&	upright, oblique\tabularnewline
%       \bottomrule
%     \end{tabular}
% \end{table}
% 
% Where applicable, oblique small-caps are substituted for italic small-caps; italic or oblique for upright italic; oblique for italic; and upright for small-caps.
% This means that some of the commands described in \fref{sec:commands} will fail silently to avoid undue clutter in the log file.
% 
% \section{The \LaTeX\ package}\label{sec:support}
% 
% To load this package, write \verb|\usepackage{cfr-lm}| in your document preamble.
% By default, the package will define \fgroup{clm2j}, \fgroup{clm2js} and \fgroup{clm2jv} as the default roman/serif, sans and typewriter fonts but you can control the choice by passing options to the package.
% 
% \begin{table}
%   \centering
%   \begin{threeparttable}
%     \caption{Package options}\label{tab:opts}
%     \begin{tabular} {>{\ttfamily}llll}
%       \toprule
% 		\textbf{key}	&	\textbf{affects}	&	\textbf{option}	&	 \textbf{possible values} \tabularnewline\midrule
% 		rm	&	\texttt{oldstyle}/\texttt{osf}\tnotex{tn:lo}				&	\texttt{true}, \texttt{false}			& default roman/serif figure style \tabularnewline
% 				&	\texttt{lining}/\texttt{lf}\tnotex{tn:lo}					&				& \tabularnewline
% 				&	\texttt{proportional}/\texttt{prop}		&				& \tabularnewline
% 				&	\texttt{tabular}/\texttt{tab}				&				& \tabularnewline\midrule
% 		sf		&	\texttt{oldstyle}/\texttt{osf}\tnotex{tn:lo}				&	\texttt{true}, \texttt{false}			& default sans figure style \tabularnewline
% 				&	\texttt{lining}/\texttt{lf}\tnotex{tn:lo}					&				& \tabularnewline
% 				&	\texttt{proportional}/\texttt{prop}		&				& \tabularnewline
% 				&	\texttt{tabular}/\texttt{tab}		&			& \tabularnewline\midrule
% 		tt		&	\texttt{oldstyle}/\texttt{osf}\tnotex{tn:lo}				&	\texttt{true}, \texttt{false}			& default typewriter figure style \tabularnewline
% 				&	\texttt{lining}/\texttt{lf}\tnotex{tn:lo}					&				& \tabularnewline
% 				&	\texttt{proportional}/\texttt{prop}		&				& \tabularnewline
% 				&	\texttt{tabular}/\texttt{tab}				&				& \tabularnewline\cmidrule{2-4}
% 				&	\texttt{monowidth}/\texttt{mono}			&	\texttt{true}, \texttt{false}			&	default typewriter family \tabularnewline
% 				&	\texttt{variable}/\texttt{var}				&		& \tabularnewline\midrule
% 		qt	&	---	&	\texttt{true}, \texttt{false}	&	nothing unless \verb|\qtfont| is defined	\tabularnewline
%       \bottomrule
%     \end{tabular}
%     \begin{tablenotes}
%       \item\label{tn:lo}Lining figures have zero depth i.e.~they stand with their bottoms on the current baseline.
%         Oldstyle (‘hanging’) figures may have depth as well as height i.e.~they sit on the baseline with their bottoms hanging over the edge.
%         These options are mutually exclusive and exhaustive.
%       \item\label{tn:pt}Proportional figures have variable widths, depending on the widths of the digits e.g.~‘1’ is typically narrower than ‘6’.
%         Tabular figures have standard, constant width i.e.~‘1’ is as wide as ‘6’, so there is typically more space on each side of ‘1’ than ‘6’.
%         These options are mutually exclusive and exhaustive.
%     \end{tablenotes}
%   \end{threeparttable}
% \end{table}
% The package recognises four keys summarised in \fref{tab:opts} and detailed below.
% Three of these keys take various options which take the value true or false.
% These control the default style of figures to be used for each of roman/serif, sans and typewriter text, and whether variable or monowidth typewriter will be used by default.
%
% \DescribeOpt{rm}\val{key-value list}
%
% Sets the default style of figures for roman (serif).
%
% \DescribeOpt{rm/oldstyle}\vals{true,false}
% \DescribeOpt{rm/osf}
%
% Whether to use oldstyle/hanging figures by default.
%
% \DescribeOpt{rm/lining}\vals{true,false}
% \DescribeOpt{rm/lf}
% 
% Whether to use lining figures by default.
%
% Note that \texttt{oldstyle} and \texttt{osf} are equivalent, while \texttt{lining} or \texttt{lf} sets the same option but inverted.
% That is, the following are equivalent:
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
rm={lining=true}
rm={lining}
rm={oldstyle=false}
rm={osf=false}
%    \end{verbatim}
% \iffalse
%</verb>
% \fi
%
% \DescribeOpt{rm/proportional}\vals{true,false}
% \DescribeOpt{rm/prop}
%
% Whether to use proportional figures by default.
%
% \DescribeOpt{rm/tabular}\vals{true,false}
% \DescribeOpt{rm/tab}
% 
% Whether to use tabular figures by default.
%
% Note that \texttt{proportional} and \texttt{prop} are equivalent, while \texttt{tabular} or \texttt{tab} set the same option but inverted.
% That is, the following are equivalent:
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
rm={tabular=true}
rm={tabular}
rm={tab=true}
rm={tab}
rm={proportional=false}
rm={prop=false}
%    \end{verbatim}
% \iffalse
%</verb>
% \fi
%
% \DescribeOpt{sf}\val{key-value list}
%
% Set default figure style for sans serif.
%
% The available keys and values are identical to those for serif explained above.
%
% \DescribeOpt{sf/oldstyle}\vals{true,false}
% \DescribeOpt{sf/osf}
%
% Whether to use oldstyle/hanging figures by default.
%
% \DescribeOpt{sf/lining}\vals{true,false}
% \DescribeOpt{sf/lf}
%
% Whether to use lining figures by default.
%
% \DescribeOpt{sf/proportional}\vals{true,false}
% \DescribeOpt{sf/prop}
%
% Whether to use proportional figures by default.
%
% \DescribeOpt{sf/tabular}\vals{true,false}
% \DescribeOpt{sf/tab}
%
% Whether to use tabular figures by default.
%
% The available keys and values are identical to those for serif explained above.
%
% \DescribeOpt{tt}\val{key-value list}
%
% Set defaults for typewriter.
% These determine not only the default figure style, but also the default style of other characters.
%
% The available keys and values for setting the default figure style are identical to those for serif explained above.
% The additional keys for choosing between variable- and mono-width typewriter are explained below.
%
% \DescribeOpt{tt/oldstyle}\vals{true,false}
% \DescribeOpt{tt/osf}
%
% Whether to use oldstyle/hanging figures by default.
%
% \DescribeOpt{tt/lining}\vals{true,false}
% \DescribeOpt{tt/lf}
%
% Whether to use lining figures by default.
%
% \DescribeOpt{tt/proportional}\vals{true,false}
% \DescribeOpt{tt/prop}
%
% Whether to use proportional figures by default.
%
% \DescribeOpt{tt/tabular}\vals{true,false}
% \DescribeOpt{tt/tab}
%
% Whether to use tabular figures by default.
%
% \DescribeOpt{tt/monowidth}\vals{true,false}
% \DescribeOpt{tt/mono}
%
% Whether to use mono-width typewriter by default.
%
% \DescribeOpt{tt/variable}\vals{true,false}
% \DescribeOpt{tt/var}
%
% Whether to use variable-width typewriter by default.
%
% Note that \texttt{variable} and \texttt{var} are equivalent, while \texttt{monowidth} or \texttt{mono} set the same option but inverted.
% That is, the following are equivalent:
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
tt={monowidth=true}
tt={monowidth}
tt={mono=true}
tt={mono}
tt={variable=false}
tt={var=false}
%    \end{verbatim}
% \iffalse
%</verb>
% \fi
%
% \DescribeOpt{qt}\vals{true,false}
% The fourth key itself takes a true or false value but has no effect unless \verb|\qtfont| is already defined\footnote{This key is designed to control use of LM Sans Quotation in conjunction with prior redefinitions of appropriate environments.
% Since this is not the sort of redefining a font package should be doing, the option will have absolutely no effect unless you do some prior work to make use of it.
% In any case, the font can still be accessed directly using the commands explained in \fref{sec:commands}.}.

% The default value in all cases is \verb|true| if an option is given without a value.
% For example, \verb|rm={oldstyle=true}| is equivalent to \verb|rm={oldstyle}|.
% Many of the options are provided for ease of use but are essentially equivalent.
% For example, \verb|proportional=false| is equivalent to \verb|tabular=true|.
% This means that the following two commands are equivalent:
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
\usepackage[%
  rm={lining=true,tabular=false},%
  sf={oldstyle,proportional},%
  tt={oldstyle=false,proportional=true,monowidth}%
]{cfr-lm}

\usepackage[%
  rm={oldstyle=false, proportional=true},%
  sf={lining=false,tabular=false},%
  tt={lining,proportional,variable=false}%
]{cfr-lm}
% 		\end{verbatim}
% \iffalse
%</verb>
% \fi
% 
% Loading the package without options is equivalent to:
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
\usepackage[%
  rm={oldstyle=true,proportional=true},%
  sf={oldstyle=true,proportional=true},%
  tt={oldstyle=true,proportional=true,variable=true},%
  qt=false%
]{cfr-lm}
%    \end{verbatim}
% \iffalse
%</verb>
% \fi
% That is, by default, oldstyle, proportional figures for roman, sans and typewriter text and variable width typewriter will be selected.
% 
% \section{Additional font commands}\label{sec:commands}
% 
% \lpack{cfr=lm}\ loads \lpack{nfssext-cfr}\ which is an extension of the package \lpack{nfssext}\ supplied by Philipp Lehman as part of The Font Installation Guide.
% The file extends the font selection commands to facilitate access to various font features.
% Both the original and the extension are designed for use with a wide range of fonts.
% For this reason, only a subset of the additional commands are relevant to any particular font support package.
% Those relevant to \lpack{cfr-lm}\ are described below.
% 
% \subsection{nfssext-cfr}
% 
% These commands are available when \lpack{cfr-lm}\ is loaded.
% If for some reason you wish to make them available at any other time, use \verb|\usepackage{nfssext-cfr}| in your document preamble.
% 
% Note that only combinations supported by the fonts will appear as expected because the commands will only have an effect if the active font offers the relevant variant.
% For example, trying to switch to a condensed width will have no effect if any of the LM Roman fonts is active.
% This means that only a subset of combinations are possible.
% In other cases,	one of two things should happen.
% First, a ‘silent’ substitution may be made.
% For example, if you request proportional figures while using monowidth typewriter, tabular figures will be silently substituted.
% Second, console messages may warn you that the combination you tried to use isn't available.
% If you request titling while using monowidth 	typewriter, a console message will warn you it was unavailable.
% The file \path{clm-test.tex} gives an idea of what's possible and also serves as an example illustrating some of the commands provided by \lpack{cfr-lm} and other ways of accessing the fonts..
% 
% \subsubsection{Widths}
% 
% \begin{table}
%   \centering
%   \caption{Width macros}\label{tab:widths}
%   \begin{tabular}{lll}
%     \toprule
% 		\textbf{width}	&	\textbf{width command}	&	\textbf{text command}\\\midrule
% 		standard				&	\verb|\regwidth|					&	\verb|\textrw{}|\\
% 		condensed				&	\verb|\cdwidth|					&	\verb|\textcd{}|\\
%    \bottomrule
%   \end{tabular}
% \end{table}
% \DescribeMacro{\regwidth}
% \DescribeMacro{\textrw}
% \DescribeMacro{\cdwidth}
% \DescribeMacro{\textcd}
% Additional macros for changing width are listed in \fref{tab:widths}.
% To switch to an condensed width until further notice, for example, you could use \verb|\cdwidth|.
% Or use \texttt{\cs{texttm}\{\cs{textlg}\{\cs{textcd}\{Hello, world!\}\}\}} to typeset just the text \texttm{\textlg{\textcd{Hello, world!}}} in light-weight condensed monowidth typewriter.
% 
% Note that the easiest way to switch to semi-bold condensed sans is to resort to using \verb|\fontseries| directly.
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
\textsf{\fontseries{sbc}\selectfont Semi-bold condensed sans}
%    \end{verbatim}
% \iffalse
%</verb>
% \fi
% produces
% \begin{center}
% 	\textsf{\fontseries{sbc}\selectfont Semi-bold condensed sans}
% \end{center}
% The problem with using the commands provided by \lpack{nfssext-cfr} is that they are designed, like standard commands such as \verb|\scshape|, to change \emph{one} aspect of the font at a time\footnote{%
%   This is, of course, by design.
%   The problem with using standard commands such as \cs{bfseries} is that they are designed to change \emph{two} aspects of the font at a time i.e.~width and weight.%
% }.
% Issuing \verb|\textsf{\textcd{\textsb{}}}| and \verb|\textsf{\textsb{\textcd{}}}| are equivalent to \verb|\textsf{}| because neither standard-width semi-bold nor condensed normal-weight sans is available.
% The problem is that each command is processed independently, so both switches fail.
% 
% Similar considerations in the case of light condensed monowidth typewriter mean that the \emph{order} in which commands are issued is critical.
% In this case, a light-weight standard-width font is available, but no normal-weight condensed font is provided.
% Consequently,
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
\texttm{\textlg{\textcd{a successful switch}}}
%    \end{verbatim}
% \iffalse
%</verb>
% \fi
% will produce \texttm{\textlg{\textcd{a successful switch}}} while
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
\texttm{\textcd{\textlg{an unsuccessful switch}}}
%    \end{verbatim}
% \iffalse
%</verb>
% \fi
% will result in \texttm{\textcd{\textlg{an unsuccessful switch}}} and a warning in the log.
% In this case, the latter command is equivalent to \verb|\texttm{\textlg{}}| because \verb|\textcd{}| can only succeed \emph{after} \verb|\textlg{}|.
% 
% \subsubsection{Weights}
% 
% \begin{table}
%   \centering
%  \caption{Weight macros}\label{tab:weights}
%  \begin{tabular}{lll}
%    \toprule
% 		  \textbf{weight}		&	\textbf{weight command}	&	\textbf{text command}\\\midrule
% 		  light							&	\verb|\lgweight|				&	\verb|\textlg{}|\\
% 		  semi-bold					&	\verb|\sbweight|				&	\verb|\textsb{}|\\
%    \bottomrule
%  \end{tabular}
% \end{table}
% Additional macros for changing the font weight are given in \fref{tab:weights}.
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
\textsb{Semi-bold and \textsl{semi-bold oblique} serif}\\
\texttt{\textlg{Light typewriter}}
%    \end{verbatim}
% \iffalse
%</verb>
% \fi
% 	produces:
% 	\begin{center}
% 		\textsb{Semi-bold and \textsl{semi-bold oblique} serif}\\
% 		\texttt{\textlg{Light typewriter}}
% 	\end{center}
% 
% \subsubsection{Shapes}
% 
% \begin{table}
%   \centering
%   \begin{threeparttable}
%     \caption{Shape macros}\label{tab:shapes}
%     \begin{tabular}{lll}
%       \toprule
% 		  \textbf{shape}		&	\textbf{shape command}	&	\textbf{text command}\\\midrule
%       oblique small-caps		&	\verb|\slshape\scshape|\tnotex{tn:all} &   \verb|\textsl{\textsc{}}|\tnotex{tn:all} \\
%   	  &	\verb|\scshape\slshape|\tnotex{tn:all} &   \verb|\textsc{\textsl{}}|\tnotex{tn:all} \\
%   	  &	\verb|\itshape\scshape|\tnotex{tn:all}\tnotex{tn:scsl} &   \verb|\textit{\textsc{}}|\tnotex{tn:all}\tnotex{tn:scsl} \\
%   	  &	\verb|\scshape\itshape|\tnotex{tn:all}\tnotex{tn:scsl} &   \verb|\textsc{\textit{}}|\tnotex{tn:all}\tnotex{tn:scsl} \\
%       & \verb|\sishape|\tnotex{tn:scsl} &	\verb|\textsi{}|\tnotex{tn:scsl} \\
% 		  upright italic			&	\verb|\uishape|					&	\verb|\textui{}|\\
%       \bottomrule
%     \end{tabular}
%     \begin{tablenotes}
%       \item \label{tn:all}Supported for all versions of \LaTeXe{}.
%       \item\label{tn:scsl} Actually the command switches to \emph{italic} small-caps but since LM does not offer this, oblique small-caps are substituted.
%         Unlike their upper/lower-case cousins, small-caps generally look the same whether the font designer calls them ‘italic small-caps’ or ‘pblique small-caps’, so the substitution is in no way second-best in this case.
%     \end{tablenotes}
%   \end{threeparttable}
% \end{table}
% \DescribeMacro{\sishape}
% \DescribeMacro{\textsi}
% \DescribeMacro{\uishape}
% \DescribeMacro{\textui}
% Extended shape-changing macros are listed in \fref{tab:shapes}.
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
\textsc{\textsl{I \emph{always} avoid a kangaroo.}}\\
\textsc{\textit{I \emph{always} avoid a kangaroo.}}\\
\textsl{\textsc{I \emph{always} avoid a kangaroo.}}\\
\textit{\textsc{I \emph{always} avoid a kangaroo.}}\\
\textsi{I \emph{always} avoid a kangaroo.}\\
\textui{Nobody is despised who can manage a crocodile.}
%    \end{verbatim}
% \iffalse
%</verb>
% \fi
% produces:
% \begin{center}
%   \textsc{\textsl{I \emph{always} avoid a kangaroo.}}\\
%   \textsc{\textit{I \emph{always} avoid a kangaroo.}}\\
%   \textsl{\textsc{I \emph{always} avoid a kangaroo.}}\\
%   \textit{\textsc{I \emph{always} avoid a kangaroo.}}\\
% 	\textsi{I \emph{always} avoid a kangaroo.}\\
% 	\textui{Nobody is despised who can manage a crocodile.}
% \end{center}
% if oblique small-caps/upright italic is available for the active font.
% If it is not, another shape will be substituted.
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
\textsf{\textsc{\slshape The bit about the kangaroo was from Lewis Carroll.}}\\
\textbf{\textui{Sylvia snorkeled snappily.}}
%    \end{verbatim}
% \iffalse
%</verb>
% \fi
% produces only:
% \begin{center}
%   \textsf{\textsc{\slshape The bit about the kangaroo was from Lewis Carroll.}}\\
% 	\textbf{\textui{Sylvia snorkeled snappily.}}
% \end{center}
% where upright sans and bold italic are substituted for italic small-caps sans and bold upright italic since neither is available.
% Note that the first substitution produces a warning in the log while the second is done ‘silently’.
% 
% \subsubsection{Figures}
% 
% \begin{table}
%   \centering
%   \begin{threeparttable}
%     \caption{Macros for changing the style of figures.}\label{tab:figs}
%     \begin{tabular}{lll}
%       \toprule
%    		\textbf{figure style}			&	\textbf{style command}	&	\textbf{text command}\\\midrule
%  		  lining\tnotex{tn:l}				&	\verb|\lstyle|					&	\verb|\textl{}|\\
% 		  oldstyle\tnotex{tn:o}			&	\verb|\ostyle|					&	\verb|\texto{}|\\
% 		  proportional\tnotex{tn:p}	&	\verb|\pstyle|					&	\verb|\textp{}|\\
% 		  tabular\tnotex{tn:t} 			&	\verb|\tstyle|					&	\verb|\textt{}|\\
% 		  proportional\tnotex{tn:p}, lining\tnotex{tn:l} &	\verb|\plstyle|	&	\verb|\textpl{}|\\
% 		  proportional\tnotex{tn:p}, oldstyle\tnotex{tn:o} &	\verb|\postyle|	&	\verb|\textpo{}|\\
% 		  tabular\tnotex{tn:t}, lining\tnotex{tn:l}	&	\verb|\tlstyle|	&	\verb|\texttl{}|\\
% 		  tabular\tnotex{tn:t}, oldstyle\tnotex{tn:o}	&	\verb|\tostyle| &	\verb|\textto{}|\\
%       \bottomrule
%     \end{tabular}
%     \begin{tablenotes}
%       \item\label{tn:l}\emph{l}ining figures stand on the current baseline: \textl{0123456789}.
%         They are generally preferable for use in tabulars, mathematics, code listings, diagrams etc.
%         Contemporary usage also favours them in text, even though traditional typography would frown on this.
%       \item\label{tn:o}\emph{o}ldstyle figures sit on or hang from the current baseline: \texto{0123456789}.
%         They are generally considered more suitable for use in text than lining figure.
%       \item\label{tn:p}\emph{p}roportional figures take up space in proportion to the actual width of the digit: \textp{0123456789}.
%         These are generally preferable in most non-specialised contexts.
%       \item\label{tn:t}\emph{t}abular figures each take up a standard width, regardless of the width of the digit: \textt{0123456789}.
%         These are better in tabulars where columns of digits should be aligned, code listings set in monowidth typewriter (as is usual) etc.
%     \end{tablenotes}
%   \end{threeparttable}
% \end{table}
%
% Commands are provided to change either one or both aspects of digits' style (\fref{tab:figs}.
% \DescribeMacro{\lstyle}
% \DescribeMacro{\ostyle}
% \DescribeMacro{\pstyle}
% \DescribeMacro{\tstyle}
% The macros all use standard abbreviations and have predictable forms.
% Any macro of the form \verb|\|\meta{$\theta$}\verb|style| switches a single aspect of the current digits' style.
% \meta{$\theta$} may be one of \verb|l|, \verb|o|, \verb|p| or \verb|t| which represent \emph{l}ining, \emph{o}ldstyle, \emph{p}roportional and \emph{tabular} respectively.
% 
% \DescribeMacro{\textl}
% \DescribeMacro{\texto}
% \DescribeMacro{\textp}
% \DescribeMacro{\textt}
% The corresponding text commands have the format \verb|\text|\meta{$\theta$}, where \meta{$\theta$} may take the same values as before.
% 
% In this document, proportional lining figures are used by default for roman/serif and sans, while tabular lining are used for typewriter:
% 		\begin{center}
% 			0123456789\\
% 			\textsf{0123456789}\\
% 			\texttt{0123456789}
% 		\end{center}
% but oldstyle figures are also accessible.
% For example:
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
\texto{0123456789}\\
\textsf{\texto{0123456789}}\\
\texttt{\texto{0123456789}}
%    \end{verbatim}
% \iffalse
%</verb>
% \fi
% produces:
% 		\begin{center}
% 			\texto{0123456789}\\
% 			\textsf{\texto{0123456789}}\\
% 			\texttt{\texto{0123456789}}
% 		\end{center}
% First, note that it is necessary to reissue \verb|\texto{}| after switching to sans or typewriter text.
% This is because both switching to sans or typewriter and switching to another figure style involves a switch of font family\footnote{Compare a switch in width or weight which does not typically involve a change of active font family.}.
% 
% Second, note that the output shows \emph{proportional} oldstyle figures for romand and sans, but \emph{tabular} oldstyle for typewriter, because the command \verb|\texto{}| only changes \emph{one} aspect of the style.
% Because proportional figures were already active for serif and sans, the command switched to proportional oldstyle figures in the first two cases.
% Contrariwise, since tabular figures were active for typewriter, the same command switched to tabular oldstyle figures in the third case.
%
% In many cases, it is convenient to switch or ensure both aspects of digits together e.g.~to ensure tabular lining figures are used in tabulars.
% \DescribeMacro{\plstyle}
% \DescribeMacro{\postyle}
% \DescribeMacro{\tlstyle}
% \DescribeMacro{\tostyle}
% Four macros are provided for this purpose.
% These have the form \verb|\|\meta{$\theta$}\meta{$\beta$}\verb|style|, where \meta{$\theta$} may be either \verb|p| or \verb|t| and \meta{$\beta$} may be either \verb|l| or \verb|o|.
% 
% \DescribeMacro{\textpl}
% \DescribeMacro{\textpo}
% \DescribeMacro{\texttl}
% \DescribeMacro{\textto}
% The corresponding text commands have the format \verb|\text|\meta{$\theta$}\meta{$\beta$}.
% 

% Taking roman as an example, tabular oldstyle digits may be accessed in several ways:
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
\texto{\textt{0123456789}}\\
\textt{\texto{0123456789}}\\
\textto{0123456789}
%    \end{verbatim}
% \iffalse
%</verb>
% \fi
% will produce three identical lines of figures:
% \begin{center}
% 	\texto{\textt{0123456789}}\\
% 	\textt{\texto{0123456789}}\\
% 	\textto{0123456789}
% \end{center}
% 
% \subsubsection{Typewriter variants}
% 
% \begin{table}
%   \centering
%  \caption{Macros for switching to mono-/variable-width typewriter}\label{tab:mvtt}
%  \begin{tabular}{lll}
%    \toprule
% 		\textbf{typewriter font}	&	\textbf{style command}	&	\textbf{text command}\\\midrule
% 	  	variable typewriter				&	\verb|\tvstyle|					&	\verb|\texttv{}|\\
% 	  	monowidth typewriter		&	\verb|\tmstyle|					&	\verb|\texttm{}|\\
%    \bottomrule
%  \end{tabular}
% \end{table}
% \DescribeMacro{\texttv}
% \DescribeMacro{\tvstyle}
% \DescribeMacro{\texttm}
% \DescribeMacro{\tmstyle}
% In addition to the package options to specify either LM Mono or LM Mono Prop as default (i.e.\ either monowidth or variable-width typewriter), it is possible to access the non-default font using the commands in \fref{tab:mvtt}.
% 
% Mono-width is default in this document so
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
\texttt{This is monowidth width typewriter.}\\
\texttv{This is variable typewriter} \texttm{except this bit at the end.}
%    \end{verbatim}
% \iffalse
%</verb>
% \fi
% produces:
% \begin{center}
%   \texttt{This is monowidth width typewriter.}\\
%   \texttv{This is variable typewriter} \texttm{except this bit at the end.}
% \end{center}
% 
% \subsubsection{Latin Modern Sans Quotation}
% 
% \begin{table}
%   \centering
%   \caption{LM Sans Quotation}\label{tab:qt}
%   \begin{tabular}{lll}
%     \toprule
%  		sans quotation			&	\verb|\qtstyle|					&	\verb|\textqt{}|\\
%     \bottomrule
%   \end{tabular}
% \end{table}
% \DescribeMacro{\textqt}
% \DescribeMacro{\qtstyle}
% Latin Modern Sans Quotation can be accessed using the macros listed in \fref{tab:qt}.
%
% For example, \verb|\textqt{some text in the font}| will produce \textqt{some text in the font}.
% 
% \subsubsection{Latin Modern Roman Dunhill}
% 
% \begin{table}
%   \centering
%  \caption{Latin Modern Roman Dunhill}\label{tab:dunhill}
%  \begin{tabular}{lll}
%    \toprule
%    \textbf{style}			&	\textbf{style command}	&	\textbf{text command}	\\\midrule
% 		  titling							&	\verb|\tistyle|						&	\verb|\textti{}|\\
%    \bottomrule
%  \end{tabular}
% \end{table}
% 
% \DescribeMacro{\textti}
% \DescribeMacro{\tistyle}
% Latin Modern Roman Dunhill can be accessed using the macros listed in \fref{tab:dunhill}.
% 
% To ensure the command succeeds independently of the currently active font, you may wish to issue \verb|\normalfont| first.
% For example:
% \iffalse
%<*verb>
% \fi
%    \begin{verbatim}
\normalfont\textti{Kinky Querulous Rhinos X-Ray Exultant Risque Zebras}\\
\textti{\textsl{Kinky Querulous Rhinos X-Ray Exultant Risque Zebras}}
% 		\end{verbatim}
% \iffalse
%</verb>
% \fi
% 		produces:
% 		\begin{center}
% 		 	\normalfont\textti{Kinky Querulous Rhinos X-Ray Exultant Risque Zebras}\\
% 			\textti{\textsl{Kinky Querulous Rhinos X-Ray Exultant Risque Zebras}}
% 		\end{center}
% 
% \subsection{zeroslash}
% 
% \DescribeMacro{\zeroslash}
% \lpack{cfr-lm}\ provides one additional command.
% \verb|\zeroslash| will produce the \zeroslash\ character from the current font.
% 
% \section{Microtype}\label{sec:mt}
% 
% \changes{v1.4}{2014/03/04}{Use family-specific settings for \lpack{microtype}.}
% Support for family-specific microtypographical features supported by \lpack{microtype}.
% This code will do nothing if you do not load \lpack{microtype}.
% If you do use these features, all regular roman and sans families, together with the sans quotation font, will use the settings for Computer Modern Roman.
% The fallback generic settings will continue to be applied to the typewriter and ‘dunhill’ families.
% 
% 
% \appendix
% 
% \DeclareFixedFootnote \fnupdmap {%
%   See, for example, \href{https://tex.stackexchange.com/q/255709/}{Why shouldn't I use \texttt{getnonfreefonts} to install additional fonts? Why shouldn't I use \texttt{updmap} when installing or removing fonts?}.}
% 
% \section{Installation}
% 
% \textbf{The vast majority of users should IGNORE this section entirely.}
% \lpack{cfr-lm} is included in all major \TeX{} distributions and should be installed as part of your \TeX{} installation.
% Installing the package yourself should be done only as a last resort or an educational exercise.
% 
% Note, in particular, that this version of \lpack{cfr-lm} should \textbf{not} be installed on older \LaTeX{} kernels as it is designed to work with the (New) New Font Selection Scheme, as updated around 2020\footnote{%
%   The package should\texttrademark{} work fine on older kernels, but the new version is bound to have some bugs and there is no reason to use it on these systems.
%   The sole purpose of the update is to accommodate the breaking changes made to font selection.
%   If you don't have those changes installed locally, nothing should be broken and the newer version of \lpack{cfr-lm} offers no advantage at all.%
% }.
% Use the initial release of \lpack{cfr-lm} if your installation of \LaTeX{} predates those changes.
% 
% Installation varies with \TeX\ distribution so you should consult the documentation which came with your system for details.
% In most cases, you will need to perform three steps:
% \begin{enumerate}
%   \item move or copy the package files to appropriate locations on your system;
%   \item refresh the \TeX\ database;
%   \item incorporate the included map file fragments for the different engines your distribution supports.
% \end{enumerate}
% 
% The following instructions assume you are using \TeX~Live\footnote{This includes Mac\TeX\ for OS X users.}. 
% They should not be too difficult to adapt if you are using a different distribution.
% 
% \subsection{Install the files}
% 
% The files should be installed in one of two locations: \emph{either} the local system-wide \TeX\ tree \emph{or} your personal tree.
% If the package is installed system-wide, all users will have access to it.
% On the other hand, you may need privileges you do not have to do this in which case you must use your personal tree.
% 
% \textbf{There are serious disadvantages to installing the package into your personal tree.
% In particular, these pertain to use of \verb|updmap --user| rather than \verb|updmap --sys|.
% If you are not aware of these disadvantages, please ensure you are fully cognisant of them before proceeding\fnupdmap.
% Merely removing the package from your personal tree at a later point will \emph{not} undo the effects.}
% 
% For \TeX~Live, \verb|kpsewhich -var-value TEXMFLOCAL| will return the path to the local tree and \verb|kpsewhich -var-value TEXMFHOME| the path to your personal tree. 
% The package already includes a hierarchy of files to help you install them correctly.
% Ignoring any symbolic link in the top directory, move or copy the files in \path{doc}, \path{fonts} and \path{tex} into the appropriate locations.
% If the tree is initially empty, you can simply move or copy the directories in as they are.
% If the tree already contains other packages, you may need to merge the package hierarchy with the pre-existing one.
% For example, if you already have a \path{doc/fonts} directory, move or copy \path{doc/fonts/cfr-lm} into \path{doc/fonts/}.
% If you have a \path{doc} directory but not a \path{doc/fonts}, move \path{doc/fonts} into \path{doc/}.
% 
% \subsection{Refresh the database}
% 
% Again, this depends on your distribution. For \TeX~Live, \verb|mktexlsr <path to directory>| for the directory you used in the first step should do the trick.
% Note that you \emph{may} be able to skip this step if you install into your personal tree.
% Whether this is so depends on the details of your set-up.
% As a test, move to a directory containing none of the package files and try \verb|kpsewhich cfr-lm.sty|.
% If the file is found, you don't need to refresh the database; otherwise use \verb|mktexlsr| and then try again.
% 
% \subsection{Install the map fragments}
% 
% For \TeX~Live, there are at least two ways of doing this. 
% The second method varies according to the version of \TeX~Live and instructions are provided accordingly.
% Both methods depend on whether you installed into \verb|TEXMFLOCAL| or \verb|TEXMFHOME|.
% If you installed system-wide, the choice is relatively straightforward --- it obviously makes sense in that case to update the font maps system-wide as well.
% 
% If, on the other hand, you installed into your personal tree, the matter is more complex. 
% On the one hand, updating the system-wide maps may create difficulties or confusion for other users because while the map files will list the fonts as available, they will not be able to access them.
% On the other hand, maintaining personal font map files can produce difficulties and confusions of its own\fnupdmap.
% Whether it is to be preferred or not is a complex issue and depends on the details of your \TeX\ distribution, local configuration and personal preference. 
% The one clear case is that in which you install into your personal tree because you lack the privileges needed to install system-wide. 
% In that case, you have no choice but to maintain personal font map files or forgo the use of all fonts not provided by your administrator.
% Other cases are thankfully beyond the scope of this document.
% 
% \subsubsection{Method 1}
% 
% If you installed the package system-wide, use the command:
% \iffalse
% ^^A ateb Heiko Oberdiek: https://tex.stackexchange.com/a/172896/
% ^^A dyw hwn ddim yn gweithio tu mewn i arg macro! 
% ^^A (*wrth gwrs* dyw e ddim yn weithio! wyt ti'n *hollol* dwp?)
%<*verb>
% \fi
\begin{verbatim}
updmap-sys --enable Map=clm.map
\end{verbatim}
% \iffalse
%</verb>
% \fi
%
% If you installed the package in your personal tree, you \emph{may} prefer\fnupdmap:
% \iffalse
%<*verb>
% \fi
\begin{verbatim}
updmap --enable Map=clm.map
\end{verbatim}
% \iffalse
%</verb>
% \fi
% Either way, \verb|updmap| will output a good deal of information after each incantation.
% This is normal.
% Just check that it does not end with an error and that it found the new map file.
% 
% \subsubsection{Method 2: \TeX~Live 2008 (and probably earlier)}
% 
% If you installed the package system-wide, use \verb|updmap-sys --edit|.
% 
% If you installed into your personal tree, you \emph{may} prefer to use	\verb|updmap --edit|\fnupdmap.
% 
% Either way, a configuration file will be opened which you can edit.
% Move to the end of the file and add the following line:
% \iffalse
%<*verb>
% \fi
\begin{verbatim}
Map clm.map
\end{verbatim}
% \iffalse
%</verb>
% \fi
% When you are done, save the file.
% \verb|updmap| or \verb|updmap-sys| will produce a great deal of output if all is well. 
% Just check that it does not end with an error and that \path{clm.map} is found.
% 
% \subsubsection{Method 2: \TeX~Live 2009 (and possibly later)}
% 
% If you installed the package system-wide, edit or or create \path{TEXMFLOCAL/web2c/updmap-local.cfg} and add the following line to the end of the file:
% \iffalse
%<*verb>
% \fi
\begin{verbatim}
Map clm.map
\end{verbatim}
% \iffalse
%</verb>
% \fi
% Save the file and tell \verb|tlmgr| to merge in your addition using the command:
% \iffalse
%<*verb>
% \fi
\begin{verbatim}
tlmgr generate updmap
\end{verbatim}
% \iffalse
%</verb>
% \fi
% \verb|tlmgr| will then tell you that you need to ensure the changes are propagated correctly by calling \verb|updmap-sys|. 
% This should produce a great deal of output.
% Check that it finds the new map file and does not end with an error.
% 
% If you installed into your personal tree, you \emph{may} prefer to use \verb|updmap --edit| as described above for \TeX~Live 2008\fnupdmap.
% 
% \subsubsection{Method 3: Current/Recent \TeX~Live}
% 
% If you installed the package system-wide, tell \cs{updmap} to enable the map file:
% \iffalse
%<*verb>
% \fi
\begin{verbatim}
updmap --sys --enable Map=clm.map
\end{verbatim}
% \iffalse
%</verb>
% \fi
% This should produce a great deal of output.
% Check that it finds the new map file and does not end with an error.
% 
% If you installed into your personal tree, you \emph{could} use \verb|updmap --user| in place of \verb|updmap --sys| as described above for \TeX~Live 2008, but this is \textbf{not} recommended\fnupdmap.
% 
% To test your installation and that the package works on your system, latex this file (\path{cfr-lm.tex}).
% The console output and/or log should tell you whether any fonts were not found. 
% If you are careful not to overwrite it, you may also compare your output with \path{cfr-lm.pdf}.%
% 
% \MaybeStop{%
% \def\glossaryname{Change History}%
% \PrintChanges
% \PrintIndex
% }
% 
% \makeatletter
% \def\@xobeysp{\leavevmode\penalty100\ }
% \makeatother
% 
% \section{Implementation}
%
% You do not need to read the remainder of this document in order to install or use the fonts.
%
% \subsection{\LaTeXe{} package}
%
% \iffalse
%<*sty>
% \fi
% \begin{package}{cfr-lm.sty}
% The \LaTeX{} user interface.
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
\RequirePackage{svn-prov}
\ProvidesPackageSVN[\filebase.sty]{$Id: cfr-lm.dtx 10792 2025-02-11 04:16:04Z cfrees $}[v1.8 \revinfo][Extended support for Latin Modern 2.004]
\DefineFileInfoSVN[clm]
\RequirePackage[T1]{fontenc}
\RequirePackage{nfssext-cfr}[2024/01/01]
%    \end{macrocode}
% \lpack{nfssext-cfr} provides \cs{ProcessKeyOptions}, \cs{IfFormatAtLeastTF} on older kernels and ensures font encoding subset declarations are valid in font definition files if the format is post=2020 but not new enough to support them out-of-the-box.
% The declarations themselves are inserted by \texttt{l3build} using \lpack{fontscripts}'s \texttt{fntbuild} and defined in \file{build.lua}\footnote{%
%   I've been told this shouldn't be on \ctan, so it isn't, but you can find it on \github.%
% }.
% Note that these declarations do \textbf{not} conform to the recommendations provided by the \LaTeX{} Project's helper script.
% Instead, they pick-up the declarations used by the \LaTeX{} Project for Latin Modern.
% This is done dynamically, so if the developers ever decide to use their script's recommendations for Latin Modern, any changes will be automatically picked up\footnote{%
%   On the other hand, if the implementation details of subset handling in the format change, the code in this package may break.
%   But that's already true for so much of the code in \lpack{nfssext}/\lpack{nfssext-cfr}, that one more area of fragility probably matters but little.^^A
% }. 
% \changes{v1.8}{2025-01-03}{\lpack{nfssext-cfr} enables TC subset declarations in font definition files for ‘in between’ formats.}
%    \begin{macrocode}
\IfFormatAtLeastTF {2020-02-02}{%
%    \end{macrocode}
% \changes{v1.8}{2025-01-03}{Determine TC encoding subset declarations dynamically and include in font definition files.}
% \changes{v1.8a}{2025-02-10}{Remove TS1 subset defns from fd files and put them back into the sty where they actually work.}
%^^A To get the oldstyle numbers etc.\ used from TS1, we need to set the subset to 0 or 1.
%^^A We follow the kernel's handling of Latin Modern and eschew the builtin circle.
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clm}{TS1:lmr} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clm2}{TS1:lmr} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clm2d}{TS1:lmdh}
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clm2dj}{TS1:lmdh}
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clm2j}{TS1:lmr}
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clm2jqs}{TS1:lmssq}
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clm2js}{TS1:lmssq}
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clm2jt}{TS1:lmtt}
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clm2jv}{TS1:lmvtt}
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clm2qs}{TS1:lmssq}
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clm2s}{TS1:lmss} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clm2t}{TS1:lmtt} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clm2v}{TS1:lmvtt} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clmd}{TS1:lmdh} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clmdj}{TS1:lmdh} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clmj}{TS1:lmr} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clmjqs}{TS1:lmssq} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clmjs}{TS1:lmss} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clmjt}{TS1:lmtt} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clmjv}{TS1:lmvtt} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clmqs}{TS1:lmssq} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clms}{TS1:lmss} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clmt}{TS1:lmtt} 
%%^^A \ExpandArgs{nnc}DeclareEncodingSubset{TS1}{clmv}{TS1:lmvtt} 
%    \begin{macrocode}
  \DeclareEncodingSubset{TS1}{clm}{1}%
  \DeclareEncodingSubset{TS1}{clm2}{1}%
  \DeclareEncodingSubset{TS1}{clm2d}{1}%
  \DeclareEncodingSubset{TS1}{clm2dj}{1}%
  \DeclareEncodingSubset{TS1}{clm2j}{1}%
  \DeclareEncodingSubset{TS1}{clm2jqs}{1}%
  \DeclareEncodingSubset{TS1}{clm2js}{1}%
  \DeclareEncodingSubset{TS1}{clm2jt}{1}%
  \DeclareEncodingSubset{TS1}{clm2jv}{1}%
  \DeclareEncodingSubset{TS1}{clm2qs}{1}%
  \DeclareEncodingSubset{TS1}{clm2s}{1}%
  \DeclareEncodingSubset{TS1}{clm2t}{1}%
  \DeclareEncodingSubset{TS1}{clm2v}{1}%
  \DeclareEncodingSubset{TS1}{clmd}{1}%
  \DeclareEncodingSubset{TS1}{clmdj}{1}%
  \DeclareEncodingSubset{TS1}{clmj}{1}%
  \DeclareEncodingSubset{TS1}{clmjqs}{1}%
  \DeclareEncodingSubset{TS1}{clmjs}{1}%
  \DeclareEncodingSubset{TS1}{clmjt}{1}%
  \DeclareEncodingSubset{TS1}{clmjv}{1}%
  \DeclareEncodingSubset{TS1}{clmqs}{1}%
  \DeclareEncodingSubset{TS1}{clms}{1}%
  \DeclareEncodingSubset{TS1}{clmt}{1}%
  \DeclareEncodingSubset{TS1}{clmv}{1}%
}{%
  \RequirePackage{textcomp}}
\UndeclareTextCommand{\textperthousand}{T1}
\ExplSyntaxOn
%    \end{macrocode}
%
% Parts of this file are based on \file{lmodern.sty} which is included with
% the Latin Modern fonts released by \gust{} and available from
% \url{http://www.gust.org.pl/projects/e-foundry/latin-modern}.
%
% \changes{v1.1? 2010-05-27}{2010/05/27}{%
%   Revise package file for more robust and flexible option handling.}
%
% \changes{v1.2 2010-05-?? (unpublished)}{2010/05/??}{%
%   See v1.3.}
%
% \changes{v1.3}{2010/05/27}{%
%   Improved option handling in v1.2 and v1.3 owes almost everything to Enrico Gregorio.}
%
% \changes{v1.4}{2014-03-04}{%
%   Add family-specific support for \lpack{microtype}.}
%   This draws also on the documentation for the \lpack{microtype} package and \file{MinionPro.sty}.
%   \file{MinionPro.sty} is available as part of the \lpack{minionpro} package and can be obtain from \url{http://mirror.ctan.org/fonts/minionpro}.
%   \file{MinionPro.sty} is in the public domain.
%   The documentation for \lpack{microtype} is available in English and German from \href{https://ctan.org/pkg/microtype}{\lpack{microtype}}.
%   It is part of the \lpack{microtype} package which is itself licensed under the LPPL.
%
% Since removed?
% \changes{v1.6 2015-2020 (unpublished)}{2015/2020}{%
%   Fix an undeclared dependency.}
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Remove dependency on \lpack{xkeyval}.
%   Reimplement key-processing in \lpack{expl3}.}
%%
% BEGIN bools 
%    \begin{macrocode}
\bool_new:N \l__clm_rm_osf_bool
\bool_new:N \l__clm_rm_prop_bool
\bool_new:N \l__clm_sf_osf_bool
\bool_new:N \l__clm_sf_prop_bool
\bool_new:N \l__clm_tt_osf_bool
\bool_new:N \l__clm_tt_prop_bool
\bool_new:N \l__clm_tt_mono_bool
\bool_new:N \l__clm_qt_bool
%    \end{macrocode}
% END bools
%    \begin{macrocode}
\keys_define:nn { clm }
{
%    \end{macrocode}
% \begin{option}{rm/oldstyle}
% boolkey for roman osf/lf
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  rm / oldstyle .bool_set:N = \l__clm_rm_osf_bool,
  rm / oldstyle .default:n = true,
  rm / oldstyle .initial:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{rm/osf}
% Shorthand
% \changes{v1.7}{2024-08-28}{%
%   New shorthand for key.%
% }
%    \begin{macrocode}
  rm / osf .bool_set:N = \l__clm_rm_osf_bool,
  rm / osf .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{rm/lining}
% Inverse
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  rm / lining .bool_set_inverse:N = \l__clm_rm_osf_bool,
  rm / lining .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{rm/lf}
% Shorthand
% \changes{v1.7}{2024-09-10}{%
%   New shorthand for key.%
% }
%    \begin{macrocode}
  rm / lf .bool_set_inverse:N = \l__clm_rm_osf_bool,
  rm / lf .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{rm/proportional}
% boolkey for roman prop/tab figures
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  rm / proportional .bool_set:N = \l__clm_rm_prop_bool,
  rm / proportional .default:n = true,
  rm / proportional .initial:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{rm/prop}
% Shorthand
% \changes{v1.7}{2024-08-28}{%
%   New shorthand for key.%
% }
%    \begin{macrocode}
  rm / prop .bool_set:N = \l__clm_rm_prop_bool,
  rm / prop .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{rm/tabular}
% Inverse
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  rm / tabular .bool_set_inverse:N = \l__clm_rm_prop_bool,
  rm / tabular .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{rm/tab}
% Shorthand
% \changes{v1.7}{2024-08-28}{%
%   New shorthand for key.%
% }
%    \begin{macrocode}
  rm / tab .bool_set_inverse:N = \l__clm_rm_prop_bool,
  rm / tab .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{sf/oldstyle}
% boolkeys for sans osf/lf
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  sf / oldstyle .bool_set:N = \l__clm_sf_osf_bool,
  sf / oldstyle .default:n = true,
  sf / oldstyle .initial:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{sf/osf}
% Shorthand
% \changes{v1.7}{2024-08-28}{%
%   New shorthand for key.%
% }
%    \begin{macrocode}
  sf / osf .bool_set:N = \l__clm_sf_osf_bool,
  sf / osf .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{sf/lining}
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
% Inverse
%    \begin{macrocode}
  sf / lining .bool_set_inverse:N = \l__clm_sf_osf_bool,
  sf / lining .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{sf/lf}
% Shorthand
% \changes{v1.7}{2024-09-10}{%
%   New shorthand for key.%
% }
%    \begin{macrocode}
  sf / lf .bool_set_inverse:N = \l__clm_sf_osf_bool,
  sf / lf .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{sf/proportional}
% boolkeys for sans prop/tab figures
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  sf / proportional .bool_set:N = \l__clm_sf_prop_bool,
  sf / proportional .default:n = true,
  sf / proportional .initial:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{sf/prop}
% Shorthand
% \changes{v1.7}{2024-08-28}{%
%   New shorthand for key.%
% }
%    \begin{macrocode}
  sf / prop .bool_set:N = \l__clm_sf_prop_bool,
  sf / prop .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{sf/tabular}
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
% Inverse
%    \begin{macrocode}
  sf / tabular .bool_set_inverse:N = \l__clm_sf_prop_bool,
  sf / tabular .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{sf/tab}
% Shorthand
% \changes{v1.7}{2024-08-28}{%
%   New shorthand for key.%
% }
%    \begin{macrocode}
  sf / tab .bool_set_inverse:N = \l__clm_sf_prop_bool,
  sf / tab .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{tt/oldstyle}
% boolkeys for typewriter osf/lf
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  tt / oldstyle .bool_set:N = \l__clm_tt_osf_bool,
  tt / oldstyle .default:n = true,
  tt / oldstyle .initial:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{tt/osf}
% Shorthand
% \changes{v1.7}{2024-08-28}{%
%   New shorthand for key.%
% }
%    \begin{macrocode}
  tt / osf .bool_set:N = \l__clm_tt_osf_bool,
  tt / osf .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{tt/lining}
% Inverse
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  tt / lining .bool_set_inverse:N = \l__clm_tt_osf_bool,
  tt / lining .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{tt/lf}
% Shorthand
% \changes{v1.7}{2024-09-10}{%
%   New shorthand for key.%
% }
%    \begin{macrocode}
  tt / lf .bool_set_inverse:N = \l__clm_tt_osf_bool,
  tt / lf .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{tt/proportional}
% boolkeys for typewriter prop/tab figures
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  tt / proportional .bool_set:N = \l__clm_tt_prop_bool,
  tt / proportional .default:n = true,
  tt / proportional .initial:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{tt/prop}
% Shorthand
% \changes{v1.7}{2024-08-28}{%
%   New shorthand for key.%
% }
%    \begin{macrocode}
  tt / prop .bool_set:N = \l__clm_tt_prop_bool,
  tt / prop .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{tt/tabular}
% Inverse
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  tt / tabular .bool_set_inverse:N = \l__clm_tt_prop_bool,
  tt / tabular .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{tt/tab}
% Shorthand
% \changes{v1.7}{2024-08-28}{%
%   New shorthand for key.%
% }
%    \begin{macrocode}
  tt / tab .bool_set_inverse:N = \l__clm_tt_prop_bool,
  tt / tab .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{tt/monowidth}
% boolkeys for typewriter mono/variable width
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  tt / monowidth .bool_set:N = \l__clm_tt_mono_bool,
  tt / monowidth .default:n = true,
  tt / monowidth .initial:n = false,
%    \end{macrocode}
% \end{option}
% \begin{option}{tt/mono}
% Shorthand
% \changes{v1.7}{2024-08-28}{%
%   New shorthand for key.%
% }
%    \begin{macrocode}
  tt / mono .bool_set:N = \l__clm_tt_mono_bool,
  tt / mono .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{tt/variable}
% Inverse
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  tt / variable .bool_set_inverse:N = \l__clm_tt_mono_bool,
  tt / variable .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{tt/var}
% Shorthand
% \changes{v1.7}{2024-08-28}{%
%   New shorthand for key.%
% }
%    \begin{macrocode}
  tt / var .bool_set_inverse:N = \l__clm_tt_mono_bool,
  tt / var .default:n = true,
%    \end{macrocode}
% \end{option}
% \begin{option}{rm}
% options for roman
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  rm .code:n ={
    \keys_set:nn { clm / rm } { #1 }
  },
  rm .value_required:n = true,
  rm .usage:n = load,
%    \end{macrocode}
% \end{option}
% \begin{option}{sf}
% options for sans
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  sf .code:n ={
    \keys_set:nn { clm / sf } { #1 }
  },
  sf .value_required:n = true,
  sf .usage:n = load,
%    \end{macrocode}
% \end{option}
% \begin{option}{tt}
% options for typewriter
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  tt .code:n ={
    \keys_set:nn { clm / tt } { #1 }
  },
  tt .value_required:n = true,
  tt .usage:n = load,
%    \end{macrocode}
% \end{option}
% \begin{option}{qt}
% note that this option does nothing unless \cs{qtfont} is defined appropriately
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{%
%   Reimplement in \lpack{expl3}.%
% }
%    \begin{macrocode}
  qt .bool_set:N = \l__clm_qt_bool,
  qt .default:n = true,
  qt .initial:n = false,
  qt .usage:n = load,
}
%    \end{macrocode}
% \end{option}
% ^^A Joseph Wright: from siunitx.sty ; https://chat.stackexchange.com/transcript/message/64327823#64327823
%    \begin{macrocode}
\providecommand \IfFormatAtLeastTF { \@ifl@t@r \fmtversion }
%    \end{macrocode}
% options override defaults
%    \begin{macrocode}
\IfFormatAtLeastTF { 2022-06-01 }
{
  \ProcessKeyOptions [ clm ] 
}{
  \RequirePackage { l3keys2e }
  \ProcessKeysOptions { clm }
}
\IfFormatAtLeastTF { 2020-10-01 }{
}{
  \RequirePackage { xparse }
  \providecommand \ExpandArgs [1]
  { \cs_if_exist_use:c { exp_args:N #1 } }
}
%    \end{macrocode}
% Translate user/default settings into bits of Berry names.
% \begin{macro}{\rmdefault,\sfdefault,\ttdefault}
% Make LM default for all families, implementing options for each
% \changes{v1.7}{2024-09-11}{%
%   Need these to be expanded for \cs{init@series@setup} to recognise families.
%   Only need \texttt{tl}s here (not functions).
%   Scrap the component \texttt{tl}s, since we're expanding the lot anyhow.}
%    \begin{macrocode}
\tl_gset:Ne \rmdefault
{
  clm \bool_if:NT \l__clm_rm_prop_bool { 2 } 
  \bool_if:NT \l__clm_rm_osf_bool { j }
}
\tl_gset:Ne \sfdefault
{
  clm \bool_if:NT \l__clm_sf_prop_bool { 2 } 
  \bool_if:NT \l__clm_sf_osf_bool { j } s
}
\tl_gset:Ne \ttdefault
{
  clm \bool_if:NT \l__clm_tt_prop_bool { 2 } 
  \bool_if:NT \l__clm_tt_osf_bool { j } 
  \bool_if:NTF \l__clm_tt_mono_bool { t } { v }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\qtfont}
% Handle the qt option, failing gracefully if somebody has enabled the option without defining \cs{qtfont} appropriately.
% We do this in a hook at the start of the document so we can respond if the required macro is defined after \lpack{\filebase} is loaded.
% It would be nice if there was a more satisfactory approach, but I can't think of one a font package has any business implementing.
%    \begin{macrocode}
\hook_gput_code:nnn { begindocument } { . }
{
  \bool_if:NT \l__clm_qt_bool
  {
    \cs_if_exist:NTF { \qtfont }
    {
      \qtfont{\qtstyle}
    }{
      \PackageWarning{cfr-lm}
      {
        Option ~ 'qt' ~ cannot ~ be ~ implemented ~ unless \MessageBreak
        '\backslash qtfont' ~ is ~ defined ~ appropriately. ~ This ~ is ~ not \MessageBreak
        done ~ automatically ~ to ~ maximise ~ compatibility ~ with ~ other \MessageBreak
        classes ~ and ~ packages. ~ The ~ suggested ~ use ~ is ~ to ~ have ~ '\backslash qtfont' \MessageBreak
        redefine ~ a command ~ such ~ as ~ '\backslash quotefont' ~ which ~ is ~ initially \MessageBreak
        set ~ to ~ some ~ reasonable ~ default ~ and ~ used ~ in ~ the \MessageBreak
        definition ~ of ~ the ~ quote ~ and/or ~ quotation ~ environments. \MessageBreak
        A ~ font ~ package ~ has ~ no ~ business ~ meddling ~ in ~ such \MessageBreak
        things ~ so ~ I'm ~ going ~ to ~ ignore ~ this ~ option
      }  
    }
  }
}
%
\ExplSyntaxOff
%    \end{macrocode}
% \end{macro}
% Maths setup is ‘based on’ (i.e.~filched from) lmodern.sty
%    \begin{macrocode}
\SetSymbolFont{operators}   {normal}{OT1}{lmr} {m}{n}
\SetSymbolFont{letters}     {normal}{OML}{lmm} {m}{it}
\SetSymbolFont{symbols}     {normal}{OMS}{lmsy}{m}{n}
\SetSymbolFont{largesymbols}{normal}{OMX}{lmex}{m}{n}
\SetSymbolFont{operators}   {bold}  {OT1}{lmr} {bx}{n}
\SetSymbolFont{letters}     {bold}  {OML}{lmm} {b}{it}
\SetSymbolFont{symbols}     {bold}  {OMS}{lmsy}{b}{n}
\SetSymbolFont{largesymbols}{bold}  {OMX}{lmex}{m}{n}
% 
\DeclareFontSubstitution{OT1}{lmr}{m}{n}
\DeclareFontSubstitution{OML}{lmm}{m}{it}
\DeclareFontSubstitution{OMS}{lmsy}{m}{n}
\DeclareFontSubstitution{OMX}{lmex}{m}{n}
% 
%    \end{macrocode}
% \begin{macro}{\mathbf,\mathsf,\mathit,\mathtt}
% maths alphabets
%    \begin{macrocode}
\SetMathAlphabet{\mathbf}{normal}{OT1}{lmr}{bx}{n}
\SetMathAlphabet{\mathsf}{normal}{OT1}{lmss}{m}{n}
\SetMathAlphabet{\mathit}{normal}{OT1}{lmr}{m}{it}
\SetMathAlphabet{\mathtt}{normal}{OT1}{lmtt}{m}{n}
\SetMathAlphabet{\mathbf}{bold}  {OT1}{lmr}{bx}{n}
\SetMathAlphabet{\mathsf}{bold}  {OT1}{lmss}{bx}{n}
\SetMathAlphabet{\mathit}{bold}  {OT1}{lmr}{bx}{it}
\SetMathAlphabet{\mathtt}{bold}  {OT1}{lmtt}{m}{n}
% 
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\mathsterling}
% \mbox{}
%    \begin{macrocode}
\def\mathsterling{\mathit{\mathchar"70BF}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\dotdigitenc,\textdde}
% \changes{v1.1}{2010/05/27?}{%
%   New macros required to define \cs{zeroslash}.}
%    \begin{macrocode}
\DeclareRobustCommand{\dotdigitenc}{%
  \not@math@alphabet\dotdigitenc\relax
  \fontencoding{U}\selectfont}
\DeclareTextFontCommand{\textdde}{\dotdigitenc}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\zeroslash}
% \changes{v1.1}{2010/05/02?}{%
%   \cs{zeroslash} is provided to access the slashed zero.}
% The slashed zero.
%    \begin{macrocode}
\newcommand*{\zeroslash}{\textdde{\char 250}}
%    \end{macrocode}
% \end{macro}
%
% Partly from \lpack{microtype} docs; partly from \lpack{MinionPro} package
%
% We need to set up aliases for the font families created by \lpack{cfr-lm} so that
% \lpack{microtype} recognises them as similar to Computer Modern Roman.
%
% T1 families in cfr-lm: clm clm2 clm2d clm2dj clm2j clm2jqs clm2js clm2jt 
% clm2jv clm2qs clm2s clm2t clm2v clmd clmdj clmj clmjqs clmjs clmjt clmjv 
% clmqs clms clmt clmv
%
% See variants set in \lpack{nfssext-cfr}
%
% Ref: \url{https://tex.stackexchange.com/a/75440}
%    \begin{macrocode}
\ExplSyntaxOn
%    \end{macrocode}
% ^^A \begin{macro}{\__clm_microtype_hook:}
% \changes{v1.4 2014-03-04}{2014/03/04}{New macro to hold \lpack{microtype} aliases.}
% \changes{v1.6 2020-2024 (unpublished)}{2020/2024}{Switch to \lpack{expl3}.}
% Aliases for \lpack{microtype} so fonts get the same custom treatment they do with \lpack{lm}.
% \changes{\fileversion}{\filedate}{Remove alias cs and just define the hook.}
%    \begin{macrocode}
\cs_new_nopar:Nn \__clm_microtype_hook:
{
  \clist_map_inline:nn 
  { 
    clm,clm2,clm2j,clmj,% roman
    clms,clm2js,clm2s,clmjs,% sans
    clmqs,clm2jqs,clm2qs,clmjqs%
    %  clm2d,clm2dj,clmd,clmdj,% leave unaliased?
    %  clm2jv,clmjv,clm2v,clmv,% leave unaliased?
    %  clmt,clm2t,clmjt,clm2jt% leave unaliased?
  }{
    \DeclareMicrotypeAlias { ##1 } { cmr }
  }
}
%    \end{macrocode}
% ^^A \end{macro}
% If \cs{Microtype@Hook} exists, add our material to it; if not, create it.
%    \begin{macrocode}
\@ifpackageloaded{microtype}
{
  \__clm_microtype_hook:
}{
  \cs_if_free:cTF { Microtype@Hook }
  {% MinionPro has \global before this
    \cs_new_eq:NN \Microtype@Hook \__clm_microtype_hook:
  }{
    \g@addto@macro\Microtype@Hook{\__clm_microtype_hook:}
  }
}
\ExplSyntaxOff
%    \end{macrocode}
% ^^A paid â chynnwys \endinput - docstrip yn chwilio amddo fe yn arbennigol
% ^^A & bydd doctrip yn ei ychwanegu fe beth bynnag
% ^^A (Martin Scharrer: https://tex.stackexchange.com/a/28997/)
%    \begin{macrocode}
%% end cfr-lm.sty
%    \end{macrocode}
% \end{package}
% \iffalse
%</sty>
% \fi
% 
% The remaining files are not used directly, but are required to generate the files which allow \TeX{} and \LaTeX{} to use the fonts.
% The sources use \verb|fontinst| and are documented in \file{\filebase-build.dtx} with (sometimes sparse) comments.
% While you can install these files into a \TeX{} tree, they are not required for typesetting.
% 
% 
%\Finale
% ^^A vim: tw=0:
