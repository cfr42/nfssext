% \iffalse meta-comment
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% fixtounicode.dtx
% Additions and changes Copyright (C) 2025 Clea F. Rees.
% Code from skeleton.dtx Copyright (C) 2015-2024 Scott Pakin (see below).
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3c
% of this license or (at your option) any later version.
% The latest version of this license is in
%   https://www.latex-project.org/lppl.txt
% and version 1.3c or later is part of all distributions of LaTeX
% version 2008-05-04 or later.
%
% This work has the LPPL maintenance status 'muaintained'.
%
% The Current Maintainer of this work is Clea F. Rees.
%
% This work consists of all files listed in manifest.txt.
%
% The file fixtounicode.dtx is a derived work under the terms of the
% LPPL. It is based on version 2.4 of skeleton.dtx which is part of
% dtxtut by Scott Pakin. A copy of dtxtut, including the
% unmodified version of skeleton.dtx is available from
% https://www.ctan.org/pkg/dtxtut and released under the LPPL.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \fi
%
% \iffalse
%<*driver>
\RequirePackage{svn-prov}
% ref. ateb Max Chernoff: https://tex.stackexchange.com/a/723294/
\def\MakePrivateLetters{\makeatletter\ExplSyntaxOn\endlinechar13}
\ExplSyntaxOff
\ProvidesFileSVN{$Id: fixtounicode.dtx 11022 2025-05-03 02:09:56Z cfrees $}[v0.0 \revinfo][\filename: \filebase]
\revinfo][\filebase DTX: ]
\DefineFileInfoSVN[fixtounicode]
\documentclass[11pt,british]{ltxdoc}
% l3doc loads fancyvrb
% fancyvrb overwrites svn-prov's macros without warning
% restore \fileversion \filerev in case we're using l3doc
\GetFileInfoSVN{fixtounicode}
\usepackage{fixtounicode}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
% \OnlyDescription
\DoNotIndex{\verb,\ProvidesPackageSVN,\NeedsTeXFormat,\ProcessKeyOptions}
\usepackage{babel}
\usepackage{fancyhdr}
\usepackage[plain]{fancyref}
\usepackage{fixfoot}
\usepackage{array,tabularx}
\usepackage{longtable}
\usepackage{enumitem}
\usepackage[referable]{threeparttablex}
\makeatletter
\def\TPT@measurement{% ateb David Carlisle: https://tex.stackexchange.com/a/370691/
  \ifdim\wd\@tempboxb<\TPTminimum
    \hsize \TPTminimum
  \else
    \hsize\wd\@tempboxb
  \fi
  \xdef\TPT@hsize{\hsize\the\hsize \noexpand\@parboxrestore}\TPT@hsize
  \ifx\TPT@docapt\@undefined\else
    \TPT@docapt \vskip.2\baselineskip
  \fi \par
  \dimen@\dp\@tempboxb % new
  \box\@tempboxb
  \ifvmode \prevdepth\dimen@ \fi% was \z@ not \dimen@
}
\renewlist{tablenotes}{enumerate}{1}
\setlist[tablenotes]{label=\tnote{\alph*},ref=\alph*,itemsep=\z@,topsep=\z@skip,partopsep=\z@skip,parsep=\z@,itemindent=\z@,labelindent=\tabcolsep,labelsep=.2em,leftmargin=*,align=left,before={\unskip\medskip\footnotesize}}
\makeatother
\usepackage{booktabs}
\usepackage{multirow}
\usepackage{xcolor}
\usepackage{xurl}
% \urlstyle{tt}
\urlstyle{sf}
\usepackage{microtype}
\usepackage[a4paper,headheight=14pt,marginparwidth=45mm,hmarginratio=4:1,vscale=.8,hscale=.7,verbose]{geometry}	% use 14pt for 11pt text, 15pt for 12pt text
% addaswyd o chronos.tex
\newlength\tewadjust
\newlength\chronosdoctemplgth
\AddToHook {begindocument/after}[.]
{%
  \setlength\tewadjust{\marginparwidth+\marginparsep-\paperwidth+\textwidth+\oddsidemargin+1in}%
  \setlength\chronosdoctemplgth{0pt}%
}
\usepackage{csquotes}
\MakeAutoQuote{‘}{’}
\MakeAutoQuote*{“}{”}
\usepackage{caption}
\DeclareCaptionFont{lf}{\lstyle}
\captionsetup[table]{labelfont=lf}
% sicrhau hyperindex=false: llwytho CYN bookmark
\usepackage{hypdoc}% ateb Ulrike Fischer: https://tex.stackexchange.com/a/695555/
\usepackage{bookmark}
\hypersetup{%
  colorlinks=true,
  citecolor={moss},
  extension=pdf,
  linkcolor={strawberry},
  linktocpage=true,
  pdfcreator={TeX},
  pdfproducer={pdfeTeX},
  urlcolor={blueberry}%
}
\NewDocElement[%
  idxtype=opt.,
  idxgroup=options,
  printtype=\textit{opt.},
]{Opt}{option}
\NewDocElement[%
  idxtype=alt.,
  idxgroup=alternates,
  printtype=\textit{alt.},
]{Alt}{alternate}
\NewDocElement[%
  idxtype=lig.,
  idxgroup=ligatures,
  printtype=\textit{lig.},
]{Lig}{ligature}
\NewDocElement[%
  idxtype=sw.,
  idxgroup=swashes,
  printtype=\textit{sw.},
]{Sw}{swash}
\NewDocElement[%
  idxtype=pkg.,
  idxgroup=,
  printtype=\textit{pkg.},
]{Pkg}{package}
\NewDocElement[%
  printtype=\textdagger,
  idxtype=,
  idxgroup=,
  macrolike,
]{DMacro}{dmacro}
\NewDocElement[%
  idxtype=fd.,
  idxgroup=fds,
  printtype=\textit{fd.},
]{Fd}{fdfile}
\NewDocElement[%
  idxtype=drv.,
  idxgroup=drivers,
  printtype=\textit{drv.},
]{Drv}{driver}
\NewDocElement[%
  idxtype=map,
  idxgroup=map files,
  printtype=\textit{map},
]{Map}{mapfile}
\NewDocElement[%
  idxtype=etx,
  idxgroup=font encodings,
  printtype=\textit{etx},
]{Etx}{encoding}
\NewDocumentCommand \val { m }
{%
  {\ttfamily =\,\meta{#1}}%
}
\ExplSyntaxOn
\NewDocumentCommand \vals { m }
{
  {
    \ttfamily = \, 
    \clist_use:nn { #1 } { \textbar }
  }
} 
\keys_define:nn { fixtounicode / doc }
{
  unknown .code:n = {
    \cs_if_free:cT { \l_keys_key_str }
    {
      \tl_gset:cn { \l_keys_key_str } { #1 }
    }
  },
}
\NewDocumentCommand \fixtounicodedocset { +m }
{
  \keys_set:nn { fixtounicode / doc } { #1 }
}
\ExplSyntaxOff
\fixtounicodedocset{%
  bug={\href{https://codeberg.org/cfr/REPO/issues}{\textsc{bugtracker}}},
  codeberg={\href{https://codeberg.org/cfr/REPO}{\textsc{codeberg}}},
  github={\href{https://github.com/cfr42/REPO}{\textsc{github}}},
  ctan={\href{https://ctan.org/}{\textsc{ctan}}},
}
% \usepackage{cleveref}
\newcommand*{\gust}{\textsc{Gust}}
\newcommand*{\lpack}[1]{\textsf{#1}}
\newcommand*{\fgroup}[1]{\textsf{#1}}
\newcommand*{\fname}[1]{\textsf{#1}}
\newcommand*{\file}[1]{\texttt{#1}}
\title{\filebase}
\author{Clea F. Rees\thanks{%
    Bug tracker:
    \href{https://codeberg.org/cfr/REPO/issues}{\url{codeberg.org/cfr/REPO/issues}}
    \textbar{} Code:
    \href{https://codeberg.org/cfr/REPO}{\url{codeberg.org/cfr/REPO}}
    \textbar{} Mirror:
    \href{https://github.com/cfr42/REPO}{\url{github.com/cfr42/REPO}}% 
}}
% \date{\fileversion~\filetoday}
\date{\fileversion~\filedate}
\pagestyle{fancy}
\fancyhf{}
\fancyhf[lh]{\itshape\filebase}
% ^^A \fancyhf[rh]{\itshape\filetoday}
\fancyhf[rh]{\itshape\fileversion}
% ^^A \fancyhf[ch]{\itshape Support for Latin Modern}
% ^^A\fancyhf[lf]{\itshape\fileversion}
\fancyhf[cf]{\itshape--- \thepage~/~\lastpage{} ---}
\ExplSyntaxOn
\hook_gput_code:nnn {shipout/lastpage} {.}
{
  \property_record:nn {t:lastpage}{abspage,page,pagenum}
}
\cs_new_protected_nopar:Npn \lastpage 
{
  \property_ref:nn {t:lastpage}{page}
}
\cs_new_eq:NN \OrigMakePrivateLetters \MakePrivateLetters
\ExplSyntaxOff
\definecolor{strawberry}{rgb}{1.000,0.000,0.502}
\definecolor{blueberry}{rgb}{0.000,0.000,1.000}
\definecolor{moss}{rgb}{0.000,0.502,0.251}
\begin{document}
\let\MakePrivateLetters\MyMakePrivateLetters
\DocInput{\filename}
\end{document}
%</driver>
% \fi
%
% \changes{v0.0}{0000-00-00{First public release.}
% ^^A lua will replace v0.0 and 0000/00/00 when tagging
% \changes{v0.0}{0000/00/00}{}
% 
% \maketitle\thispagestyle{empty}
% \pdfinfo{%
% 	/Creator		(TeX)
% 	/Producer		(pdfTeX)
% 	/Author			(Clea F. Rees)
% 	/Title			(fixtounicode)
% 	/Subject		(TeX)
% 	/Keywords		(TeX,LaTeX,Clea,Rees)}
% \pdfcatalog{%
% 	/URL				()
% 	/PageMode	/UseOutlines}	
% \setlength{\parindent}{0pt}
% \setlength{\parskip}{0.5em}
% 
% 
% \begin{abstract}
%   \noindent\lpack{fixtounicode}
% \end{abstract}
%
% \tableofcontents
% 
% 
% \MaybeStop{%
% \PrintChanges
% \PrintIndex
% }
% 
% \section{Implementation}
%
% You do not need to read the remainder of this document in order to install or use the package.
%
% \iffalse
%<*sty>
% \fi
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
\RequirePackage{svn-prov}
\ProvidesPackageSVN[\filebase.sty]{$Id: fixtounicode.dtx 11022 2025-05-03 02:09:56Z cfrees $}[v0.0 \revinfo]
\DefineFileInfoSVN
%    \end{macrocode}
% \iffalse
% ^^A Paid â defnyddio \GetFileInfoSVN*/\GetFileInfoSVN{} yn y fan hon!!
% \fi
%    \begin{macrocode}
\ExplSyntaxOn
\typeout{TSIECIO'R ~ FERSIWN ~ YMA!!}
\keys_define:nn { fixtounicode }
{
  dev .bool_set:N = \l__fixtounicode_dev_bool,
  dev .initial:n = false,
  dev .default:n = true,
}
\ProcessKeyOptions[fixtounicode]
\seq_new:N \l__fixtounicode_glyphtounicode_seq
\seq_new:N \l__fixtounicode_tounicode_seq
\seq_new:N \l__fixtounicode_glyphs_seq
\seq_new:N \l__fixtounicode_unicodes_seq
%    \end{macrocode}
% \begin{macro}{\__fixtounicode_tounicode:nnNN,
%   \__fixtounicode_tounicode:nNN,
%   \__fixtounicode_tounicode_pair:nn,
%   \__fixtounicode_tounicode:VVNN 
% }
% Engine-specific functions for mappings.
% \begin{macro}{\pdfglyphtounicode}
% Lua\TeX{} only, from the manual.
%    \begin{macrocode}
\bool_if:nT { \sys_if_engine_luatex_p: }
{
  \protected\def\pdfglyphtounicode {\pdfextension glyphtounicode }
  \lua_now:n { pdf.setgentounicode(1) }
}
%    \end{macrocode}
% \end{macro}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \__fixtounicode_tounicode_pair:nn #1#2 {}
%    \end{macrocode}
% If we're using pdf\TeX{}, things are straightforward: we simply use the \texttt{tfm:} syntax for the primitive \cs{pdfglyphtounicode}.
% If we're using Lua\TeX{}, things are complicated.
% For newer releases (2026?), the macro \cs{pdfglyphtounicode} defined above will accept \texttt{tfm:}, but this is undocumented so we only use it if \texttt{dev} is true.
% Otherwise, we could apply values directly to the \texttt{tfm}\footnote{%^^A
%   Ideally, either \texttt{dev} will become default when updated binaries are distributed or the code will apply the values to the \texttt{tfmdata} using different code from Max Chernoff.
%   We don't do that for now because hardly anybody uses the development binaries and a unified interface for both pdf\TeX{} and Lua\TeX{} will hopefully seem reasonable before released versions are distributed.%^^A
% }, but that will only work for the newer releases, so we apply them to the type1 \texttt{pfb} for now, using a workaround from Max Chernoff.
%    \begin{macrocode}
\bool_if:nT { \sys_if_engine_pdftex_p: || \bool_lazy_and_p:nn { \sys_if_engine_luatex_p: } { \l__fixtounicode_dev_bool } }
{
  \cs_new_protected_nopar:Npn \__fixtounicode_tounicode:nNN #1#2#3
  {
    \cs_set_nopar:Npn \__fixtounicode_tounicode_pair:nn ##1##2
    {
%    \end{macrocode}
% TFM-specific mapping.
%
% pdf\TeX{} manual page 33.
%    \begin{macrocode}
      \pdfglyphtounicode { tfm:#1/##1 } { ##2 }
    }
    \seq_set_eq:NN \l__fixtounicode_glyphtounicode_seq #2
    \seq_set_eq:NN \l__fixtounicode_tounicode_seq #3
    \seq_map_pairwise_function:NNN \l__fixtounicode_glyphtounicode_seq
      \l__fixtounicode_tounicode_seq \__fixtounicode_tounicode_pair:nn
  }
  \cs_new_protected_nopar:Npn \__fixtounicode_tounicode:nnNN #1#2#3#4
  {
    \__fixtounicode_tounicode:nNN { #1 } #3 #4
  }
}
%    \end{macrocode}
% For Lua\TeX{} without the \texttt{dev} option, we use the workaround mentioned above.
% This deals with a limitation in the engine (lack of support for the \texttt{tfm:} syntax in \cs{pdfextension tounicode}) and a bug (failure to recognise any \texttt{tounicode} mappings specified for \texttt{tfm}s).
%    \begin{macrocode}
\bool_lazy_and:nnT { \sys_if_engine_luatex_p: } { ! \l__fixtounicode_dev_bool }
{
  \lua_load_module:n { fixtounicode }
  \cs_set_nopar:Npn \__fixtounicode_tounicode_pair:nn #1#2
  {
    \lua_now:n {
      table.insert(fixtounicodeTab,tonumber("#2",16))
    }
  }
  \cs_new_protected_nopar:Npn \__fixtounicode_tounicode:nnNN #1#2#3#4
  {
    \lua_now:n { fixtounicodeTab = {} }
    \seq_set_eq:NN \l__fixtounicode_glyphtounicode_seq #3
    \seq_set_eq:NN \l__fixtounicode_tounicode_seq #4
    \seq_map_pairwise_function:NNN \l__fixtounicode_glyphtounicode_seq
      \l__fixtounicode_tounicode_seq \__fixtounicode_tounicode_pair:nn
    \lua_now:e {
      fixtounicode.tounicodes("#1","#2",fixtounicodeTab)
    }
  }
  \cs_new_protected_nopar:Npn \__fixtounicode_tounicode:nNN #1#2#3
  {
    \__fixtounicode_tounicode:nnNN { #1 } { #1 } { #2 } { #3 }
  }
}
%    \end{macrocode}
% On all other engines, the functions are noop.
%    \begin{macrocode}
\bool_if:nF { \sys_if_engine_luatex_p: || \sys_if_engine_pdftex_p: }
{
  \cs_new_eq:NN \__fixtounicode_tounicode:nnNN \use_none:nnnn
  \cs_new_eq:NN \__fixtounicode_tounicode:nNN \use_none:nnn
}
\cs_generate_variant:Nn \__fixtounicode_tounicode:nnNN { VVNN }
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\fixtounicode_tounicode:nnNN,
%   \fixtounicode_tounicode:nNN,
%   \fixtounicode_tounicode:nnnn,
%   \fixtounicode_tounicode:nnn
% }
% Public expl3.
%    \begin{macrocode}
\cs_new_eq:NN \fixtounicode_tounicode:nnNN \__fixtounicode_tounicode:nnNN
\cs_new_eq:NN \fixtounicode_tounicode:nNN \__fixtounicode_tounicode:nNN
\cs_new_protected_nopar:Npn \fixtounicode_tounicode:nnnn #1#2#3#4
{
  \seq_set_split:Nnn \l__fixtounicode_glyphs_seq { , } { #3 }
  \seq_set_split:Nnn \l__fixtounicode_unicodes_seq { , } { #4 }
  \__fixtounicode_tounicode:nnNN { #1 } { #2 } \l__fixtounicode_glyphs_seq \l__fixtounicode_unicodes_seq
}
\cs_new_protected_nopar:Npn \fixtounicode_tounicode:nnn #1#2#3
{
  \seq_set_split:Nnn \l__fixtounicode_glyphs_seq { , } { #2 }
  \seq_set_split:Nnn \l__fixtounicode_unicodes_seq { , } { #3 }
  \__fixtounicode_tounicode:nnNN { #1 } { #1 } \l__fixtounicode_glyphs_seq \l__fixtounicode_unicodes_seq
}
%    \end{macrocode}
% \end{macro}
% Keys.
%    \begin{macrocode}
\keys_define:nn { fixtounicode }
{
  default .tl_set:N = \l__fixtounicode_default_tl,
  default .initial:n = 2FFFF,
  default .default:V = \c_empty_tl,
  glyphs .clist_set:N = \l__fixtounicode_glyphs_clist,
  glyphs .value_required:n = true,
  pfb .tl_set:N = \l__fixtounicode_pfb_tl,
  pfb .initial:V = \c_empty_tl,
  tfm .tl_set:N = \l__fixtounicode_tfm_tl,
  tfm .initial:V = \c_empty_tl,
  unicodes .clist_set:N = \l__fixtounicode_unicodes_clist,
  unicodes .value_required:n = true,
}
%    \end{macrocode}
% \begin{macro}{\__fixtounicode_tounicode:n}
% Generic interface.
%    \begin{macrocode}
\cs_new_protected:Npn \__fixtounicode_tounicode:n #1
{
  \group_begin:
    \keys_set:nn { fixtounicode } { #1 }
    \tl_if_empty:NT \l__fixtounicode_tfm_tl
    {
      \tl_if_empty:NTF \l__fixtounicode_pfb_tl
      {
        % error
      }{
        \tl_set_eq:NN \l__fixtounicode_tfm_tl \l__fixtounicode_pfb_tl
      }
    }
    \tl_if_empty:NT \l__fixtounicode_pfb_tl
    {
      \tl_set_eq:NN \l__fixtounicode_pfb_tl \l__fixtounicode_tfm_tl
    }
    \seq_set_from_clist:NN \l__fixtounicode_glyphs_seq \l__fixtounicode_glyphs_clist
    \seq_set_from_clist:NN \l__fixtounicode_unicodes_seq \l__fixtounicode_unicodes_clist
    \seq_map_indexed_inline:Nn \l__fixtounicode_unicodes_seq
    {
      \tl_if_eq:VnTF \c_empty_tl { ##2 }
      {
        \seq_set_item:NnV \l__fixtounicode_unicodes_seq { ##1 } \l__fixtounicode_default_tl
      } {
        \tl_if_eq:nnT { ##2 } { 0 }
        {
          \seq_set_item:NnV \l__fixtounicode_unicodes_seq { ##1 } \l__fixtounicode_default_tl
        }
      }
    }
    \__fixtounicode_tounicode:VVNN \l__fixtounicode_tfm_tl \l__fixtounicode_pfb_tl \l__fixtounicode_glyphs_seq \l__fixtounicode_unicodes_seq
  \group_end:
}
\cs_generate_variant:Nn \seq_set_item:Nnn { NnV }
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\fixtounicode}
% 2e syntax.
%    \begin{macrocode}
\cs_set_eq:NN \fixtounicode \__fixtounicode_tounicode:n 
%    \end{macrocode}
% \end{macro}
%    \begin{macrocode}
\ExplSyntaxOff
%    \end{macrocode}
% \iffalse
%</sty>
% \fi
% 
% \subsection{??}
% 
% \iffalse
%<*??>
% \fi
%    \begin{macrocode}
%    \end{macrocode}
% \iffalse
%</??>
% \fi
% \subsection{Other}
% \iffalse
%<*other>
% \fi
%    \begin{macrocode}
%    \end{macrocode}
% \iffalse
%</other>
% \fi
%\Finale
